<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>自在技术博客</title>
  
  <subtitle>专心一点</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hxqxiaoqi.gitee.io/"/>
  <updated>2020-07-24T04:07:55.328Z</updated>
  <id>https://hxqxiaoqi.gitee.io/</id>
  
  <author>
    <name>自在</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx之添加模块</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/07/20/nginx%E4%B9%8B%E6%B7%BB%E5%8A%A0%E6%A8%A1%E5%9D%97/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/07/20/nginx之添加模块/</id>
    <published>2020-07-20T09:40:43.000Z</published>
    <updated>2020-07-24T04:07:55.328Z</updated>
    
    <content type="html"><![CDATA[<p>查看模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看可用模块及已安装模块</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.14.2</span><br><span class="line">cat auto/options | grep YES</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已安装模块</span></span><br><span class="line">./nginx -V</span><br></pre></td></tr></table></figure><p>添加模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 到安装包</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.14.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译，别make install，会覆盖原配置</span></span><br><span class="line">./configure --prefix=/opt/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_stub_status_module --with-http_gzip_static_module --with-http_realip_module</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份nginx文件</span></span><br><span class="line">cp /opt/nginx/sbin/nginx /mnt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制新的nginx文件到nginx安装目录下</span></span><br><span class="line">cp objs/nginx /opt/nginx/sbin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看安装模块</span></span><br><span class="line">/opt/nginx/sbin/nginx -V</span><br></pre></td></tr></table></figure><p>添加第三方模块 (nginx_upstream_check_module-master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载、解压</span></span><br><span class="line">wget https://codeload.github.com/yaoweibin/nginx_upstream_check_module/zip/master</span><br><span class="line">tar xf nginx_upstream_check_module-master.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 到nginx安装包下</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.14.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line">patch -p1 &lt; ../nginx_upstream_check_module-master/check_1.14.0+.patch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 试编译</span></span><br><span class="line">./configure --prefix=/opt/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_stub_status_module --with-http_gzip_static_module --with-http_realip_module --add-module=../nginx_upstream_check_module-master/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译，千万别执行：make install</span></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份nginx文件</span></span><br><span class="line">cp /opt/nginx/sbin/nginx /mnt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制新的nginx文件到nginx安装目录下</span></span><br><span class="line">cp objs/nginx /opt/nginx/sbin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看安装模块</span></span><br><span class="line">/opt/nginx/sbin/nginx -V</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;查看模块&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
      <category term="linux基础" scheme="https://hxqxiaoqi.gitee.io/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="nginx" scheme="https://hxqxiaoqi.gitee.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx之健康检查</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/07/20/nginx%E4%B9%8B%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/07/20/nginx之健康检查/</id>
    <published>2020-07-20T08:40:43.000Z</published>
    <updated>2020-07-24T04:07:58.988Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>nginx健康检查分为：</p><ul><li>被动：ngx_http_proxy_module 模块和ngx_http_upstream_module模块，会有失败的连接。（自带）</li><li>主动：nginx 模块 nginx_upstream_check_module，通过它可以用来检测后端 realserver 的健康状态。（淘宝第三方）</li></ul><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>被动检查</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">upstream name &#123;</span><br><span class="line">    server 10.1.1.110:8080 max_fails=1 fail_timeout=10s;</span><br><span class="line">    server 10.1.1.122:8080 max_fails=1 fail_timeout=10s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">max_fails=number        <span class="comment"># 设定Nginx与服务器通信的尝试失败的次数。在fail_timeout参数定义的时间段内，如果失败的次数达到此值，Nginx就认为服务器不可用。在下一个fail_timeout时间段，服务器不会再被尝试。 失败的尝试次数默认是1。设为0就会停止统计尝试次数，认为服务器是一直可用的。 你可以通过指令proxy_next_upstream、fastcgi_next_upstream和 memcached_next_upstream来配置什么是失败的尝试。 默认配置时，http_404状态不被认为是失败的尝试。</span></span><br><span class="line">fail_timeout=time       <span class="comment"># 设定服务器被认为不可用的时间段以及统计失败尝试次数的时间段。在这段时间中，服务器失败次数达到指定的尝试次数，服务器就被认为不可用。默认情况下，该超时时间是10秒。</span></span><br></pre></td></tr></table></figure><p>主动检查</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># interval检测间隔时间，单位为毫秒，rsie请求2次正常的话，标记此realserver的状态为up，fall表示请求5次都失败的情况下，标记此realserver的状态为down，timeout为超时时间，单位为毫秒。</span></span><br><span class="line">upstream linuxyan &#123;</span><br><span class="line">    server 192.168.10.21:80;</span><br><span class="line">    server 192.168.10.22:80;</span><br><span class="line">    check interval=3000 rise=2 fall=5 timeout=1000;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># web查看realserver状态的页面</span></span><br><span class="line">location /nstatus &#123;</span><br><span class="line">check_status;</span><br><span class="line">access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;nginx健康检查分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;被动：ngx_http_proxy_module 模块和ngx_http_upstrea
      
    
    </summary>
    
      <category term="linux基础" scheme="https://hxqxiaoqi.gitee.io/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="nginx" scheme="https://hxqxiaoqi.gitee.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>seata分布式事务</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/07/13/seata%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/07/13/seata分布式事务/</id>
    <published>2020-07-13T07:00:00.000Z</published>
    <updated>2020-07-24T03:43:54.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>角色介绍：</p><ul><li>XID：一个全局事务的唯一标识，由ip:port:sequence组成</li><li>Transaction Coordinator (TC)： 事务协调器，维护全局事务的运行状态，负责协调并驱动全局事务的提交或回滚。</li><li>Transaction Manager （TM）： 控制全局事务的边界，负责开启一个全局事务，并最终发起全局提交或全局回滚的决议。</li><li>Resource Manager (RM)： 控制分支事务，负责分支注册、状态汇报，并接收事务协调器的指令，驱动分支（本地）事务的提交和回滚。</li></ul><h2 id="k8s高可用部署"><a href="#k8s高可用部署" class="headerlink" title="k8s高可用部署"></a>k8s高可用部署</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">seata-ha-server</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">seata-ha-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">    - port:</span> <span class="number">8091</span></span><br><span class="line"><span class="attr">      protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">seata-ha-server</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">seata-ha-server</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">seata-ha-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line">      <span class="string">app.kubernetes.io/name:</span> <span class="string">seata-ha-server</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line">        <span class="string">app.kubernetes.io/name:</span> <span class="string">seata-ha-server</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">seata-ha-server</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">docker.io/seataio/seata-server:latest</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">          env:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">SEATA_CONFIG_NAME</span></span><br><span class="line"><span class="attr">              value:</span> <span class="attr">file:/root/seata-config/registry</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">              containerPort:</span> <span class="number">8091</span></span><br><span class="line"><span class="attr">              protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          volumeMounts:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">seata-config</span></span><br><span class="line"><span class="attr">              mountPath:</span> <span class="string">/root/seata-config</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">file-conf</span></span><br><span class="line"><span class="attr">              mountPath:</span> <span class="string">/root/seata-config1</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">seata-config</span></span><br><span class="line"><span class="attr">          configMap:</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">seata-ha-server-config</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">file-conf</span></span><br><span class="line"><span class="attr">          configMap:</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">file-config</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">file-config</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="string">file.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    ## transaction log store, only used in seata-server</span></span><br><span class="line"><span class="string">    store &#123;</span></span><br><span class="line"><span class="string">      ## store mode: file、db、redis</span></span><br><span class="line"><span class="string">      mode = "db"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      ## 填写数据库连接信息</span></span><br><span class="line"><span class="string">      db &#123;</span></span><br><span class="line"><span class="string">        ## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp)/HikariDataSource(hikari) etc.</span></span><br><span class="line"><span class="string">        datasource = "druid"</span></span><br><span class="line"><span class="string">        ## mysql/oracle/postgresql/h2/oceanbase etc.</span></span><br><span class="line"><span class="string">        dbType = "mysql"</span></span><br><span class="line"><span class="string">        driverClassName = "com.mysql.jdbc.Driver"</span></span><br><span class="line"><span class="string">        url = "jdbc:mysql://192.168.10.70:3306/seata"</span></span><br><span class="line"><span class="string">        user = "root"</span></span><br><span class="line"><span class="string">        password = "mamahao"</span></span><br><span class="line"><span class="string">        minConn = 5</span></span><br><span class="line"><span class="string">        maxConn = 30</span></span><br><span class="line"><span class="string">        globalTable = "global_table"</span></span><br><span class="line"><span class="string">        branchTable = "branch_table"</span></span><br><span class="line"><span class="string">        lockTable = "lock_table"</span></span><br><span class="line"><span class="string">        queryLimit = 100</span></span><br><span class="line"><span class="string">        maxWait = 5000</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string"></span><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">seata-ha-server-config</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="string">registry.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    registry &#123;</span></span><br><span class="line"><span class="string">      # eureka配置信息</span></span><br><span class="line"><span class="string">      # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span></span><br><span class="line"><span class="string">      type = "eureka"</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      eureka &#123;</span></span><br><span class="line"><span class="string">        serviceUrl = "http://10.107.152.214:9901/eureka"</span></span><br><span class="line"><span class="string">        application = "default"</span></span><br><span class="line"><span class="string">        weight = "1"</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    config &#123;</span></span><br><span class="line"><span class="string">      # file、nacos 、apollo、zk、consul、etcd3</span></span><br><span class="line"><span class="string">      type = "file"</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">      file &#123;</span></span><br><span class="line"><span class="string">        # 指定file.conf的文件位置</span></span><br><span class="line"><span class="string">        name = "file:/root/seata-config1/file.conf"</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;角色介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XID：一个全局事务的唯一标识，由ip:port:sequence组成&lt;/li&gt;
&lt;li&gt;Transa
      
    
    </summary>
    
      <category term="中间件" scheme="https://hxqxiaoqi.gitee.io/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
      <category term="seata" scheme="https://hxqxiaoqi.gitee.io/tags/seata/"/>
    
  </entry>
  
  <entry>
    <title>k8s之ingress-nginx</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/07/09/k8s%E4%B9%8Bingress-nginx/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/07/09/k8s之ingress-nginx/</id>
    <published>2020-07-09T07:06:00.000Z</published>
    <updated>2020-07-24T03:50:03.184Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><strong>Ingress是什么？</strong></p><p>ingress 是除了 hostport  nodeport  clusterIP以及云环境专有的负载均衡器外的访问方式,官方提供了Nginx ingress controller。ingress-nginx本身就是nodeport模式</p><p><strong>Ingress能做什么？</strong></p><p>k8s中，不管是哪种类型的svc，不管是用iptables还是ipvs实现端口转发实现负载均衡，也只是实现了四层的负载均衡，但是，如果有需求要进行七层负载均衡呢？比如你想将你的网站设置为https呢？Ingress就是来帮你解决此问题的。</p><p><strong>Ingress工作原理及主要组成部分？</strong></p><p>工作原理：</p><p>类似于Nginx，可以理解为在Ingress建立一个个映射规则，Ingress Controller通过监听Ingress这个api对象里的规则并转化为Nginx/HAporxy等的配置，然后对外部提供服务。</p><p>组成部分：</p><p>ingress controller：</p><p>核心是一个deployment，实现方式有很多种，比如Nignx、HAproxy、trafik、lstio，需要编写的yaml有：Deployment、Service、ConfigMap、ServiceAccount(Auth)，其中Service类型可以是NodePort或者LoadBalance</p><p>ingress resources：这个是类型为ingress的k8s api对象，主要面向开发人员。</p><h1 id="nginx-ingress-controller-yaml部署"><a href="#nginx-ingress-controller-yaml部署" class="headerlink" title="nginx-ingress-controller yaml部署"></a>nginx-ingress-controller yaml部署</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-configuration</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tcp-services</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">udp-services</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress-clusterrole</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">configmaps</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">endpoints</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">nodes</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">pods</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">secrets</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">nodes</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">services</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">events</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">create</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">patch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"extensions"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"networking.k8s.io"</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingresses</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"extensions"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"networking.k8s.io"</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ingresses/status</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress-role</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">configmaps</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">pods</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">secrets</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">namespaces</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">configmaps</span></span><br><span class="line"><span class="attr">    resourceNames:</span></span><br><span class="line">      <span class="comment"># Defaults to "&lt;election-id&gt;-&lt;ingress-class&gt;"</span></span><br><span class="line">      <span class="comment"># Here: "&lt;ingress-controller-leader&gt;-&lt;nginx&gt;"</span></span><br><span class="line">      <span class="comment"># This has to be adapted if you change either parameter</span></span><br><span class="line">      <span class="comment"># when launching the nginx-ingress-controller.</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"ingress-controller-leader-nginx"</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">update</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">configmaps</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">create</span></span><br><span class="line"><span class="attr">  - apiGroups:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">endpoints</span></span><br><span class="line"><span class="attr">    verbs:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">get</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress-role-nisa-binding</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress-role</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress-clusterrole-nisa-binding</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress-clusterrole</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line">      <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line">        <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">      annotations:</span></span><br><span class="line">        <span class="string">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">        <span class="string">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line">      <span class="comment"># wait up to five minutes for the drain of connections</span></span><br><span class="line"><span class="attr">      hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">      nodeSelector:</span></span><br><span class="line">        <span class="string">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">bitnami/nginx-ingress-controller:0.26.2</span></span><br><span class="line"><span class="attr">          args:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line"><span class="attr">          securityContext:</span></span><br><span class="line"><span class="attr">            allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">            capabilities:</span></span><br><span class="line"><span class="attr">              drop:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">ALL</span></span><br><span class="line"><span class="attr">              add:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="comment"># www-data -&gt; 33</span></span><br><span class="line"><span class="attr">            runAsUser:</span> <span class="number">33</span></span><br><span class="line"><span class="attr">          env:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">POD_NAME</span></span><br><span class="line"><span class="attr">              valueFrom:</span></span><br><span class="line"><span class="attr">                fieldRef:</span></span><br><span class="line"><span class="attr">                  fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line"><span class="attr">              valueFrom:</span></span><br><span class="line"><span class="attr">                fieldRef:</span></span><br><span class="line"><span class="attr">                  fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">              containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">              protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">              containerPort:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">              protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          livenessProbe:</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          readinessProbe:</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          lifecycle:</span></span><br><span class="line"><span class="attr">            preStop:</span></span><br><span class="line"><span class="attr">              exec:</span></span><br><span class="line"><span class="attr">                command:</span></span><br><span class="line"><span class="bullet">                  -</span> <span class="string">/wait-shutdown</span></span><br></pre></td></tr></table></figure><h1 id="ingress-配置"><a href="#ingress-配置" class="headerlink" title="ingress 配置"></a>ingress 配置</h1><h2 id="示例一：暴露域名"><a href="#示例一：暴露域名" class="headerlink" title="示例一：暴露域名"></a>示例一：暴露域名</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">www1.wuzi.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">ingress-svc1</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="示例二：暴露ip"><a href="#示例二：暴露ip" class="headerlink" title="示例二：暴露ip"></a>示例二：暴露ip</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">gw</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">b2b-test</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">kubernetes.io/ingress.class:</span> <span class="string">"nginx"</span></span><br><span class="line">    <span class="comment"># 地址重写</span></span><br><span class="line">    <span class="string">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/$2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line">      <span class="comment"># 绑定的svc内容。可以配置多个</span></span><br><span class="line"><span class="attr">        - backend:</span></span><br><span class="line"><span class="attr">            serviceName:</span> <span class="string">mmhsy-gateway</span></span><br><span class="line"><span class="attr">            servicePort:</span> <span class="number">9900</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/b2b-gw(/|$)(.*)</span></span><br><span class="line"><span class="attr">        - backend:</span></span><br><span class="line"><span class="attr">            serviceName:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">            servicePort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><h2 id="示例三：https配置"><a href="#示例三：https配置" class="headerlink" title="示例三：https配置"></a>示例三：https配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建私钥key</span></span><br><span class="line">openssl genrsa -des3 -out server.key 2048</span><br><span class="line"><span class="comment">## 创建csr请求</span></span><br><span class="line">openssl req -new -key server.key -out server.csr</span><br><span class="line"><span class="comment">## 去除私钥的连接密码</span></span><br><span class="line">cp server.key&#123;,.org&#125;</span><br><span class="line">openssl rsa -<span class="keyword">in</span> server.key.org -out server.key</span><br><span class="line"><span class="comment">## 生成证书文件</span></span><br><span class="line">openssl x509 -req -days 3650 -<span class="keyword">in</span> server.csr -signkey server.key -out server.crt</span><br><span class="line"><span class="comment">## 生成tls格式</span></span><br><span class="line">kubectl create secret tls tls-secret --key server.key --cert server.crt</span><br></pre></td></tr></table></figure><p>ingress引用tls证书</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-https</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  tls:</span></span><br><span class="line"><span class="attr">  - hosts:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">www3.wuzi.com</span></span><br><span class="line"><span class="attr">    secretName:</span> <span class="string">tls-secret</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">www3.wuzi.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">ingress-https</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="示例四：重写"><a href="#示例四：重写" class="headerlink" title="示例四：重写"></a>示例四：重写</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="attr">https://www3.wuzi.com:31087</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">rewrite</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">www5.wuzi.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">ingress-svc1</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Ingress是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ingress 是除了 hostport  nodeport  cl
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="https://hxqxiaoqi.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>记一次磁盘空间不足问题</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/07/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/07/07/记一次磁盘空间不足问题/</id>
    <published>2020-07-07T08:27:43.000Z</published>
    <updated>2020-07-24T04:01:52.865Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ol><li>使用df -ha查看/分区容量占满</li><li>但使用du -sh /*却没有占用大的目录</li><li>lsof |grep delete也没有占用deleted状态的大容量进程</li><li>find / -type f -size +100M -exec ls -lh {} ;查找大文件，也没有找到</li><li>find / -name “.*” -exec ls -lh {} ;查找隐藏文件，也没有太大的</li><li>重启服务器没有效果，依然显示磁盘空间不足</li></ol><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>去谷歌和百度查了大量相关的资料，没有效果，最后仔细区分了下du和df的区别，得到灵感。</p><p>df 从文件系统上获得磁盘信息。</p><p>du 计算文件数容量总和的到磁盘信息。</p><p>du基本确定是实际的磁盘容量占用，既然du显示磁盘比较空余，那肯定是df这边出问题。</p><p>df从文件系统获取磁盘信息，大概率文件系统信息错误，查看linux的文件系统，是xfs，查找xfs文件系统异常相关文档。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装xfs检查工具</span></span><br><span class="line">yum -y install xfsdump xfsprogs-devel xfsprogs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测/分区的碎片，显示的数据是50%左右，</span></span><br><span class="line">xfs_db -c frag -r /dev/sda3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试使用修复整理碎片</span></span><br><span class="line">xfs_fsr /dev/sda3</span><br></pre></td></tr></table></figure><p>ps：如果是SSD或者PCIE的SSD盘，一般不需要碎片整理，整理多了反而影响寿命。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;使用df -ha查看/分区容量占满&lt;/li&gt;
&lt;li&gt;但使用du -sh /*却没有占用大的目录&lt;/li&gt;
&lt;li&gt;lsof |
      
    
    </summary>
    
      <category term="linux基础" scheme="https://hxqxiaoqi.gitee.io/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="disk" scheme="https://hxqxiaoqi.gitee.io/tags/disk/"/>
    
  </entry>
  
  <entry>
    <title>k8s监控脚本</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/07/04/k8s%E7%9B%91%E6%8E%A7%E8%84%9A%E6%9C%AC/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/07/04/k8s监控脚本/</id>
    <published>2020-07-04T01:06:00.000Z</published>
    <updated>2020-07-24T06:59:39.038Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="comment"># 获取k8s集群基本信息，根据kubernets模块提供的接口</span></span><br><span class="line">from kubernetes import client, config</span><br><span class="line">from collections import Counter</span><br><span class="line">import requests</span><br><span class="line">import datetime</span><br><span class="line"></span><br><span class="line">config.kube_config.load_kube_config(config_file=<span class="string">"/var/www/html/cgi-bin/b2b-kubeconfig.yaml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择名称空间</span></span><br><span class="line">clusername = <span class="string">"b2b"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取API的CoreV1Api版本对象</span></span><br><span class="line">v1 = client.CoreV1Api()</span><br><span class="line">k8snamespaces = v1.list_pod_for_all_namespaces(watch=False)</span><br><span class="line">k8snamespacessvc = v1.list_namespaced_service(namespace=clusername)</span><br><span class="line"></span><br><span class="line">nodename = &#123;<span class="string">"192.168.1.10"</span>:<span class="string">"(外网IP1#k1)"</span>,<span class="string">"192.168.1.10"</span>:<span class="string">"(外网IP2#k2)"</span>,<span class="string">"192.168.1.10"</span>:<span class="string">"(外网IP3#k3)"</span>&#125;</span><br><span class="line"></span><br><span class="line">def k8sinfo(podname):</span><br><span class="line">    <span class="comment">#集群接口信息</span></span><br><span class="line">    k8spodinfo = v1.read_namespaced_pod(namespace=clusername,name=podname)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取pod信息</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"&lt;tr&gt;"</span>)</span><br><span class="line">    <span class="keyword">if</span> k8spodinfo.status.pod_ip != None:</span><br><span class="line">        global podip</span><br><span class="line">        podip = k8spodinfo.status.pod_ip</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8'&gt;&amp;nbsp;%s&lt;font size='1' color='#575757'&gt;%s&lt;/font&lt;/td&gt;"</span> % (podip,nodename[k8spodinfo.status.host_ip]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;None&lt;/td&gt;"</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8'&gt;&amp;nbsp;%s&lt;/td&gt;"</span> % (podname))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8'&gt;&amp;nbsp;%s &lt;/td&gt;"</span> % (k8spodinfo.status.host_ip))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> k8spodinfo.spec.containers[0].ports[0].container_port != None:</span><br><span class="line">        k8spodport = k8spodinfo.spec.containers[0].ports[0].container_port</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;%s&lt;/td&gt;"</span> % (k8spodport))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;None&lt;/td&gt;"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 获取pod运行状态</span></span><br><span class="line">    k8sstatus = k8spodinfo.status.container_statuses[0].ready</span><br><span class="line">    <span class="keyword">if</span> k8sstatus == True:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;&lt;font color='green'&gt;&amp;nbsp;True&lt;/font&gt;&lt;/td&gt;"</span>)</span><br><span class="line">    <span class="keyword">elif</span> k8sstatus == False:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;&lt;font color='red'&gt;&amp;nbsp;False&lt;/font&gt;&lt;/td&gt;"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;&lt;font color='red'&gt;&amp;nbsp;Error&lt;/font&gt;&lt;/td&gt;"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 健康检查</span></span><br><span class="line">    <span class="keyword">if</span> k8spodinfo.spec.containers[0].readiness_probe != None:</span><br><span class="line">        <span class="keyword">if</span> k8spodinfo.spec.containers[0].readiness_probe.http_get != None:</span><br><span class="line">            checkurl = k8spodinfo.spec.containers[0].readiness_probe.http_get</span><br><span class="line">            url=<span class="string">"http://"</span>+podip+<span class="string">":"</span>+str(k8spodport)+checkurl.path</span><br><span class="line">        </span><br><span class="line">            try:</span><br><span class="line">                request = requests.get(url,timeout=2.2)</span><br><span class="line">                httpStatusCode = request.status_code</span><br><span class="line">            except requests.exceptions.ConnectTimeout:</span><br><span class="line">                httpStatusCode = 502</span><br><span class="line">            except requests.exceptions.Timeout:</span><br><span class="line">                httpStatusCode = 503</span><br><span class="line">            except requests.exceptions.ConnectionError:</span><br><span class="line">                httpStatusCode=504</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">if</span> httpStatusCode == 200:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;&lt;font color='green'&gt;"</span>+str(httpStatusCode)+<span class="string">"&lt;/font&gt;&lt;/td&gt;"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;&lt;font color='red'&gt;"</span>+str(httpStatusCode)+<span class="string">"&lt;/font&gt;&lt;/td&gt;"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;none&lt;/td&gt;"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;none&lt;/td&gt;"</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="comment">#版本</span></span><br><span class="line">    <span class="keyword">if</span> k8spodinfo.metadata.annotations[<span class="string">'aliyun.kubernetes.io/deploy-timestamp'</span>] != None:</span><br><span class="line">        k8spodversion = k8spodinfo.metadata.annotations[<span class="string">'aliyun.kubernetes.io/deploy-timestamp'</span>]</span><br><span class="line">        k8spodversion1 = k8spodversion.split(<span class="string">"T"</span>)[0]+<span class="string">" "</span>+k8spodversion.split(<span class="string">"T"</span>)[1].split(<span class="string">"Z"</span>)[0]</span><br><span class="line">        k8spodversion2 = datetime.datetime.strptime(k8spodversion1,<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        add = datetime.timedelta(hours=8)</span><br><span class="line">        k8spodversion = (k8spodversion2+add).strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;%s&lt;/td&gt;"</span> % (k8spodversion))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;None&lt;/td&gt;"</span>)</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 重启次数</span></span><br><span class="line">    k8srestart = k8spodinfo.status.container_statuses[0].restart_count</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;%s&lt;/td&gt;"</span> % (k8srestart))</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#最后重启时间</span></span><br><span class="line">    <span class="keyword">if</span> k8spodinfo.status.container_statuses[0].state.running != None:</span><br><span class="line">        restarttime = k8spodinfo.status.container_statuses[0].state.running.started_at</span><br><span class="line">        restarttime1 = str(restarttime).split(<span class="string">"+"</span>)[0]</span><br><span class="line">        restarttime2 = datetime.datetime.strptime(restarttime1,<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        addtime = datetime.timedelta(hours=8)</span><br><span class="line">        restarttime = (restarttime2+addtime).strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;%s&lt;/td&gt;"</span> % (restarttime))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;td bgcolor='e8e8e8' align='center'&gt;None&lt;/td&gt;"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"&lt;/tr&gt;"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 获取pod名，去重，相同pod打印同一表格内</span></span><br><span class="line">def podinfo():</span><br><span class="line">    podapp = []</span><br><span class="line">    podlist = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> k8snamespaces.items:</span><br><span class="line">        <span class="keyword">if</span> i.metadata.namespace == clusername:</span><br><span class="line">            podapp.append(i.metadata.labels[<span class="string">'app'</span>])</span><br><span class="line">            podlist.append(i.metadata.name)</span><br><span class="line">    b = dict(Counter(podapp))</span><br><span class="line">    c = [key <span class="keyword">for</span> key, value <span class="keyword">in</span> b.items() <span class="keyword">if</span> value &gt; 0]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> c:</span><br><span class="line">        <span class="keyword">for</span> cluster <span class="keyword">in</span> k8snamespacessvc.items:</span><br><span class="line">            <span class="keyword">if</span> cluster.spec.selector[<span class="string">'app'</span>] == y:</span><br><span class="line">                cluster_ip = cluster.spec.cluster_ip</span><br><span class="line">                cluster_port = cluster.spec.ports[0].port</span><br><span class="line">                </span><br><span class="line">        <span class="comment">#num = 0</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;b&gt;&lt;font size=4&gt;%s&lt;/font&gt;&lt;/b&gt;"</span> % (y))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'&lt;table border=1 cellspacing=0&gt;&lt;tr style="color: #ffffff" bgcolor="#444444" align="center"&gt;&lt;td width=220px&gt;&lt;b&gt;Container IP&lt;/b&gt;&lt;/td&gt;&lt;td width=360px&gt;&lt;b&gt;&amp;nbsp;Name&lt;/b&gt;&lt;/td&gt;&lt;td width=150px&gt;&lt;b&gt;node IP&lt;/b&gt;&lt;/td&gt;&lt;td width=62px&gt;&lt;b&gt;&amp;nbsp;Port&lt;/b&gt;&lt;/td&gt;&lt;td width=80px&gt;&lt;b&gt;Status&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;&lt;font size=1&gt;UrlCheck(2.2s)&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;&lt;td width=130px&gt;&lt;b&gt;Version&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;&lt;font size=1&gt;Refresh_Conf&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Log&lt;/b&gt;&lt;/td&gt;&lt;td&gt;restart&lt;/td&gt;&lt;td&gt;restarttime&lt;/td&gt;&lt;/tr&gt;'</span>)</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> podlist:</span><br><span class="line">            <span class="keyword">if</span> x.startswith(y):</span><br><span class="line">                <span class="comment">#num = num+1</span></span><br><span class="line">                k8sinfo(x)</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">'&lt;/table&gt;'</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"&lt;br&gt;&lt;br&gt;"</span>)</span><br><span class="line">        </span><br><span class="line">podinfo()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="脚本" scheme="https://hxqxiaoqi.gitee.io/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="python脚本" scheme="https://hxqxiaoqi.gitee.io/tags/python%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>openvpn搭建配置</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/06/06/openvpn%E6%90%AD%E5%BB%BA%E9%85%8D%E7%BD%AE/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/06/06/openvpn搭建配置/</id>
    <published>2020-06-06T06:00:00.000Z</published>
    <updated>2020-07-24T06:29:12.228Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/lemon-le/p/6266921.html" target="_blank" rel="noopener">https://www.cnblogs.com/lemon-le/p/6266921.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/lemon-le/p/6266921.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/lemon-le/p/6266921.html&lt;
      
    
    </summary>
    
      <category term="linux基础" scheme="https://hxqxiaoqi.gitee.io/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="vpn" scheme="https://hxqxiaoqi.gitee.io/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>flink之REST API调用</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/06/05/flink%E4%B9%8BREST%20API%E8%B0%83%E7%94%A8/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/06/05/flink之REST API调用/</id>
    <published>2020-06-05T05:00:00.000Z</published>
    <updated>2020-07-24T04:04:05.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>监视API由作为<em>Dispatcher</em>一部分运行的Web服务器支持。默认情况下，此服务器在post侦听<code>8081</code>，可以<code>flink-conf.yaml</code>通过via 进行配置<code>rest.port</code>。请注意，监视API Web服务器和Web仪表板Web服务器当前是相同的，因此可以在同一端口一起运行。但是，它们会响应不同的HTTP URL。</p><p>如果有多个Dispatcher（用于高可用性），则每个Dispatcher将运行自己的监视API实例，该实例提供有关在Dispatcher被选为集群负责人时已完成和正在运行的作业的信息。</p><p>官网地址：<a href="https://ci.apache.org/projects/flink/flink-docs-stable/monitoring/rest_api.html" target="_blank" rel="noopener">https://ci.apache.org/projects/flink/flink-docs-stable/monitoring/rest_api.html</a></p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交任务</span></span><br><span class="line"><span class="comment"># programArgsList: jar包启动的参数，指定允许环境</span></span><br><span class="line"><span class="comment"># entryClass：jar定义的类，可以根据类指定允许不同任务</span></span><br><span class="line">curl -XPOST -H <span class="string">"Content-Type:application/java-archive"</span> http://192.168.10.111:8081/jars/692d1b44-8f99-4f42-abe0-21579238b57d_mmhsy-dw-flink-1.0-SNAPSHOT.jar/run -d <span class="string">'&#123;"programArgsList":[   "--profiles","test"],"entryClass":"com.mmhsy.flink.member.job.MemberStarMemberInviteJob"&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看job</span></span><br><span class="line">curl -XGET http://192.168.10.111:8081/v1/<span class="built_in">jobs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止job</span></span><br><span class="line"><span class="comment"># a50773a0af8feb5d57a16b6b7191d6b2：是jobid</span></span><br><span class="line">curl -XPATCH  http://192.168.10.111:8081/<span class="built_in">jobs</span>/a50773a0af8feb5d57a16b6b7191d6b2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看包</span></span><br><span class="line">curl -XGET http://192.168.10.111:8081/jars</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传包</span></span><br><span class="line">curl -X POST -F <span class="string">"jarfile=@/root/.jenkins/workspace/mmhsy-dw-flink/target/mmhsy-dw-flink-1.0-SNAPSHOT.jar"</span> http://192.168.10.111:8081/jars/upload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除包</span></span><br><span class="line"><span class="comment"># be820cde-b111-4641-9542-abaef4ca239f_Flink-Demo-1.0-SNAPSHOT.jar：是上传jar时生成的id</span></span><br><span class="line">curl -X DELETE -H <span class="string">"Content-Type:application/x-java-archive"</span> http://192.168.10.111:8081/jars/be820cde-b111-4641-9542-abaef4ca239f_Flink-Demo-1.0-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;监视API由作为&lt;em&gt;Dispatcher&lt;/em&gt;一部分运行的Web服务器支持。默认情况下，此服务器在post侦听&lt;code&gt;8081&lt;
      
    
    </summary>
    
      <category term="大数据" scheme="https://hxqxiaoqi.gitee.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="flink" scheme="https://hxqxiaoqi.gitee.io/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title>nginx之php-fpm</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/06/04/nginx%E4%B9%8Bphp-fpm/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/06/04/nginx之php-fpm/</id>
    <published>2020-06-04T09:40:43.000Z</published>
    <updated>2020-07-24T04:07:50.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>nginx 是一个高性能的http服务器和反向代理服务器。即nginx可以作为一个HTTP服务器进行网站的发布处理，也可以作为一个反向代理服务器进行负载均衡。但需要注意的是：nginx本身并不会对php文件进行解析。对PHP页面的请求将会被nginx交给FastCGI进程监听的IP地址及端口，由php-fpm(第三方的fastcgi进程管理器)作为动态解析服务器处理，最后将处理结果再返回给nginx。即nginx通过反向代理功能将动态请求转向后端php-fpm，从而实现对PHP的解析支持，这就是Nginx实现PHP动态解析的基本原理。 </p><ul><li>Nginx 是非阻塞IO &amp; IO复用模型，通过操作系统提供的类似 epoll 的功能，可以在一个线程里处理多个客户端的请求。Nginx 的进程就是线程，即每个进程里只有一个线程，但这一个线程可以服务多个客户端。</li><li>PHP-FPM 是阻塞的单线程模型，pm.max_children 指定的是最大的进程数量，pm.max_requests 指定的是每个进程处理多少个请求后重启(因为 PHP 偶尔会有内存泄漏，所以需要重启)。PHP-FPM 的每个进程也只有一个线程，但是一个进程同时只能服务一个客户端。</li><li>fastCGI ：为了解决不同的语言解释器(如php、python解释器)与webserver的通信，于是出现了cgi协议。只要你按照cgi协议去编写程序，就能实现语言解释器与webwerver的通信。如php-cgi程序。但是webserver每收到一个请求，都会去fork一个cgi进程，请求结束再kill掉这个进程。这样有10000个请求，就需要fork、kill php-cgi进程10000次。 fastcgi是cgi的改良版本。fast-cgi每次处理完请求后，不会kill掉这个进程，而是保留这个进程，使这个进程可以一次处理多个请求。大大提高了效率。</li></ul><h1 id="php-fpm安装"><a href="#php-fpm安装" class="headerlink" title="php-fpm安装"></a>php-fpm安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum -y remove php*</span><br><span class="line">yum install epel-release -y</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br><span class="line">yum -y install php72w php72w-cli php72w-fpm php72w-common php72w-devel php72w-embedded php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改/etc/php-fpm.d/www.conf，解决访问403问题</span></span><br><span class="line">security.limit_extensions = .php .php3 .php4 .php5 .php7 .html .js .css .jpg .jpeg .gif .png .htm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> php-fpm.service</span><br><span class="line">systemctl start php-fpm.service</span><br></pre></td></tr></table></figure><h1 id="nginx配置php"><a href="#nginx配置php" class="headerlink" title="nginx配置php"></a>nginx配置php</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    server &#123;</span><br><span class="line">        listen       86;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        root /data/winbb;</span><br><span class="line">        location / &#123;</span><br><span class="line">            index  index.php index.html index.htm;</span><br><span class="line">            try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#php 的单独写一个匹配location,这样让静态文件走location /&#123;&#125;</span></span><br><span class="line">        location ~* \.php &#123;</span><br><span class="line">            fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            include  fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上配置，当一个http请求到来时，被处理的过程如下：</p><ol><li>http请求到来后，通过server全局块里监听的端口号，匹配到相应server。然后接下来进行location路径的匹配。</li><li>首先匹配到location / ，在这个匹配规则中，通过try_files 先在root目录(/home/leimengyao/api/app/htdocs)下查找是否有$uri文件；没有匹配到，然后再查找root目录下是否有$uri/目录；同样没有匹配到，则匹配最后一项/index.php?$args，即发出一个”内部子请求”，也就相当于nginx发起了一个http请求到<a href="http://10.94.120.124:8000/index.php?c=1&amp;d=4" target="_blank" rel="noopener">http://10.94.120.124:8000/index.php?c=1&amp;d=4</a></li><li>这个子请求会被location ~ .php${ … }catch住，也就是进入 FastCGI 的处理程序（nginx需要通过FastCGI模块配置，将相关php参数传递给php-fpm处理。在该项中设置了fastcgi_pass相关参数，将用户请求的资源发给php-fpm进行解析，这里涉及到nginx FastCGI模块的相关配置语法下文会介绍）。而具体的 URI 及参数是在 REQUEST_URI 中传递给 FastCGI 和 WordPress 程序的，因此不受 URI 变化的影响！！！！。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;nginx 是一个高性能的http服务器和反向代理服务器。即nginx可以作为一个HTTP服务器进行网站的发布处理，也可以作为一个反向代理服
      
    
    </summary>
    
      <category term="linux基础" scheme="https://hxqxiaoqi.gitee.io/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="nginx" scheme="https://hxqxiaoqi.gitee.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>k8s之存储</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/06/04/k8s%E4%B9%8B%E5%AD%98%E5%82%A8/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/06/04/k8s之存储/</id>
    <published>2020-06-04T01:06:00.000Z</published>
    <updated>2020-07-24T03:50:19.746Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>为了保证数据的持久性，必须保证数据在外部存储在docker容器中，为了实现数据的持久性存储，在宿主机和容器内做映射，可以保证在容器的生命周期结束，数据依旧可以实现持久性存储。但是在k8s中，由于*pod分布在各个不同的节点之上，并不能实现不同节点之间持久性数据的共享，并且，在节点故障时，可能会导致数据的永久性丢失。为此，k8s就引入了外部存储卷的功能。</p><p>k8s的存储卷类型：</p><ol><li><code>emptyDir</code>（临时目录）:Pod删除，数据也会被清除，这种存储成为emptyDir，用于数据的临时存储。</li><li><code>hostPath</code> (宿主机目录映射):</li><li><code>本地的SAN</code> (iSCSI,FC)、NAS(nfs,cifs,http)存储</li><li><code>分布式存储</code>（glusterfs，rbd，cephfs）</li><li><code>云存储</code>（EBS，Azure Disk）</li></ol><p><font color="32CD32">k8s整体存储概念为</font>：实际存储空间（nfs，hostpath…）—&gt; pv（抽象的存储卷，从实际的存储空间划分）—&gt; pvc（存储卷创建申请，从pv中划分定义）—&gt; pod（在创建pod中引用pvc进行挂在）</p><p>参考链接：<a href="https://www.cnblogs.com/linuxk/p/9760363.html" target="_blank" rel="noopener">https://www.cnblogs.com/linuxk/p/9760363.html</a></p><h1 id="emptyDir存储卷演示"><a href="#emptyDir存储卷演示" class="headerlink" title="emptyDir存储卷演示"></a>emptyDir存储卷演示</h1><p>一个emptyDir 第一次创建是在一个pod被指定到具体node的时候，并且会一直存在在pod的生命周期当中，正如它的名字一样，它初始化是一个空的目录，pod中的容器都可以读写这个目录，这个目录可以被挂在到各个容器相同或者不相同的的路径下。当一个pod因为任何原因被移除的时候，这些数据会被永久删除。注意：一个容器崩溃了不会导致数据的丢失，因为容器的崩溃并不移除pod。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl explain pods.spec.volumes.emptyDir  #查看emptyDir存储定义</span></span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl explain pods.spec.containers.volumeMounts  #查看容器挂载方式</span></span><br><span class="line">[root@k8s-master ~]<span class="comment"># cd mainfests &amp;&amp; mkdir volumes &amp;&amp; cd volumes</span></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># cp ../pod-demo.yaml ./</span></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># mv pod-demo.yaml pod-vol-demo.yaml</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># vim pod-vol-demo.yaml   #创建emptyDir的清单</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-demo</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: myapp</span><br><span class="line">    tier: frontend</span><br><span class="line">  annotations:</span><br><span class="line">    magedu.com/create-by:<span class="string">"cluster admin"</span></span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: myapp</span><br><span class="line">    image: ikubernetes/myapp:v1</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    ports:</span><br><span class="line">    - name: http</span><br><span class="line">      containerPort: 80</span><br><span class="line">    volumeMounts:    <span class="comment">#在容器内定义挂载存储名称和挂载路径</span></span><br><span class="line">    - name: html</span><br><span class="line">      mountPath: /usr/share/nginx/html/</span><br><span class="line">  - name: busybox</span><br><span class="line">    image: busybox:latest</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: html</span><br><span class="line">      mountPath: /data/    <span class="comment">#在容器内定义挂载存储名称和挂载路径</span></span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">'/bin/sh'</span>,<span class="string">'-c'</span>,<span class="string">'while true;do echo $(date) &gt;&gt; /data/index.html;sleep 2;done'</span>]</span><br><span class="line">  volumes:  <span class="comment">#定义存储卷</span></span><br><span class="line">  - name: html    <span class="comment">#定义存储卷名称  </span></span><br><span class="line">    emptyDir: &#123;&#125;  <span class="comment">#定义存储卷类型</span></span><br><span class="line">    </span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pod-vol-demo.yaml </span></span><br><span class="line">pod/pod-vol-demo created </span><br><span class="line"></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                                 READY     STATUS    RESTARTS   AGE</span><br><span class="line">pod-vol-demo                         2/2       Running   0          27s</span><br><span class="line"></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get pods -o wide</span></span><br><span class="line">NAME                      READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">......</span><br><span class="line">pod-vol-demo              2/2       Running   0          16s       10.244.2.34   k8s-node02</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在上面，我们定义了2个容器，其中一个容器是输入日期到index.html中，然后验证访问nginx的html是否可以获取日期。以验证两个容器之间挂载的emptyDir实现共享。如下访问验证:</span></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># curl 10.244.2.34  #访问验证</span></span><br><span class="line">Tue Oct 9 03:56:53 UTC 2018</span><br><span class="line">Tue Oct 9 03:56:55 UTC 2018</span><br><span class="line">Tue Oct 9 03:56:57 UTC 2018</span><br><span class="line">Tue Oct 9 03:56:59 UTC 2018</span><br><span class="line">Tue Oct 9 03:57:01 UTC 2018</span><br><span class="line">Tue Oct 9 03:57:03 UTC 2018</span><br><span class="line">Tue Oct 9 03:57:05 UTC 2018</span><br><span class="line">Tue Oct 9 03:57:07 UTC 2018</span><br><span class="line">Tue Oct 9 03:57:09 UTC 2018</span><br><span class="line">Tue Oct 9 03:57:11 UTC 2018</span><br><span class="line">Tue Oct 9 03:57:13 UTC 2018</span><br><span class="line">Tue Oct 9 03:57:15 UTC 2018</span><br></pre></td></tr></table></figure><h1 id="hostPath存储卷演示"><a href="#hostPath存储卷演示" class="headerlink" title="hostPath存储卷演示"></a>hostPath存储卷演示</h1><p>hostPath宿主机路径，就是把pod所在的宿主机之上的脱离pod中的容器名称空间的之外的宿主机的文件系统的某一目录和pod建立关联关系，在pod删除时，存储数据不会丢失。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master volumes]<span class="comment"># vim pod-hostpath-vol.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-vol-hostpath</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: myapp</span><br><span class="line">    image: ikubernetes/myapp:v1</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: html</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">  volumes:</span><br><span class="line">    - name: html</span><br><span class="line">      hostPath:</span><br><span class="line">        path: /data/pod/volume1</span><br><span class="line">        <span class="built_in">type</span>: DirectoryOrCreate</span><br><span class="line"><span class="comment"># DirectoryOrCreate  宿主机上不存在创建此目录  </span></span><br><span class="line"><span class="comment"># Directory 必须存在挂载目录  </span></span><br><span class="line"><span class="comment"># FileOrCreate 宿主机上不存在挂载文件就创建  </span></span><br><span class="line"><span class="comment"># File 必须存在文件  </span></span><br><span class="line"></span><br><span class="line">[root@k8s-node01 ~]<span class="comment"># mkdir -p /data/pod/volume1</span></span><br><span class="line">[root@k8s-node01 ~]<span class="comment"># vim /data/pod/volume1/index.html</span></span><br><span class="line">node01.magedu.com</span><br><span class="line">[root@k8s-node02 ~]<span class="comment"># mkdir -p /data/pod/volume1</span></span><br><span class="line">[root@k8s-node02 ~]<span class="comment"># vim /data/pod/volume1/index.html</span></span><br><span class="line">node02.magedu.com</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pod-hostpath-vol.yaml </span></span><br><span class="line">pod/pod-vol-hostpath created</span><br><span class="line"></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get pods -o wide</span></span><br><span class="line">NAME                                 READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">......</span><br><span class="line">pod-vol-hostpath                     1/1       Running   0          37s       10.244.2.35   k8s-node02</span><br><span class="line">......</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># curl 10.244.2.35</span></span><br><span class="line">node02.magedu.com</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl delete -f pod-hostpath-vol.yaml  #删除pod，再重建，验证是否依旧可以访问原来的内容</span></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pod-hostpath-vol.yaml </span></span><br><span class="line">pod/pod-vol-hostpath created</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># curl  10.244.2.37 </span></span><br><span class="line">node02.magedu.com</span><br></pre></td></tr></table></figure><h1 id="nfs共享存储卷演示"><a href="#nfs共享存储卷演示" class="headerlink" title="nfs共享存储卷演示"></a>nfs共享存储卷演示</h1><p>nfs使的我们可以挂在已经存在的共享到的我们的Pod中，和emptyDir不同的是，emptyDir会被删除当我们的Pod被删除的时候，但是nfs不会被删除，仅仅是解除挂在状态而已，这就意味着NFS能够允许我们提前对数据进行处理，而且这些数据可以在Pod之间相互传递.并且，nfs可以同时被多个pod挂在并进行读写。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">（1）在stor01节点上安装nfs，并配置nfs服务</span><br><span class="line">[root@stor01 ~]<span class="comment"># yum install -y nfs-utils  ==》192.168.56.14</span></span><br><span class="line">[root@stor01 ~]<span class="comment"># mkdir /data/volumes -pv</span></span><br><span class="line">[root@stor01 ~]<span class="comment"># vim /etc/exports</span></span><br><span class="line">/data/volumes 192.168.56.0/24(rw,no_root_squash)</span><br><span class="line">[root@stor01 ~]<span class="comment"># systemctl start nfs</span></span><br><span class="line">[root@stor01 ~]<span class="comment"># showmount -e</span></span><br><span class="line">Export list <span class="keyword">for</span> stor01:</span><br><span class="line">/data/volumes 192.168.56.0/24</span><br><span class="line"></span><br><span class="line">（2）在node01和node02节点上安装nfs-utils，并测试挂载</span><br><span class="line">[root@k8s-node01 ~]<span class="comment"># yum install -y nfs-utils</span></span><br><span class="line">[root@k8s-node02 ~]<span class="comment"># yum install -y nfs-utils</span></span><br><span class="line">[root@k8s-node02 ~]<span class="comment"># mount -t nfs stor01:/data/volumes /mnt</span></span><br><span class="line">[root@k8s-node02 ~]<span class="comment"># mount</span></span><br><span class="line">......</span><br><span class="line">stor01:/data/volumes on /mnt <span class="built_in">type</span> nfs4 (rw,relatime,vers=4.1,rsize=131072,wsize=131072,namlen=255,hard,proto=tcp,port=0,timeo=600,retrans=2,sec=sys,clientaddr=192.168.56.13,local_lock=none,addr=192.168.56.14)</span><br><span class="line">[root@k8s-node02 ~]<span class="comment"># umount /mnt/</span></span><br><span class="line"></span><br><span class="line">（3）创建nfs存储卷的使用清单</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># cp pod-hostpath-vol.yaml pod-nfs-vol.yaml</span></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># vim pod-nfs-vol.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-vol-nfs</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: myapp</span><br><span class="line">    image: ikubernetes/myapp:v1</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: html</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">  volumes:</span><br><span class="line">    - name: html</span><br><span class="line">      nfs:</span><br><span class="line">        path: /data/volumes</span><br><span class="line">        server: stor01</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pod-nfs-vol.yaml </span></span><br><span class="line">pod/pod-vol-nfs created</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get pods -o wide</span></span><br><span class="line">NAME                     READY     STATUS    RESTARTS   AGE       IP            NODE</span><br><span class="line">pod-vol-nfs              1/1       Running   0          21s       10.244.2.38   k8s-node02</span><br><span class="line"></span><br><span class="line">（3）在nfs服务器上创建index.html</span><br><span class="line">[root@stor01 ~]<span class="comment"># cd /data/volumes</span></span><br><span class="line">[root@stor01 volumes ~]<span class="comment"># vim index.html</span></span><br><span class="line">&lt;h1&gt; nfs stor01&lt;/h1&gt;</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># curl 10.244.2.38</span></span><br><span class="line">&lt;h1&gt; nfs stor01&lt;/h1&gt;</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl delete -f pod-nfs-vol.yaml   #删除nfs相关pod，再重新创建，可以得到数据的持久化存储</span></span><br><span class="line">pod <span class="string">"pod-vol-nfs"</span> deleted</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pod-nfs-vol.yaml</span></span><br></pre></td></tr></table></figure><h1 id="NFS使用PV和PVC"><a href="#NFS使用PV和PVC" class="headerlink" title="NFS使用PV和PVC"></a>NFS使用PV和PVC</h1><h2 id="1、配置nfs存储"><a href="#1、配置nfs存储" class="headerlink" title="1、配置nfs存储"></a>1、配置nfs存储</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@stor01 volumes]<span class="comment"># mkdir v&#123;1,2,3,4,5&#125;</span></span><br><span class="line">[root@stor01 volumes]<span class="comment"># vim /etc/exports</span></span><br><span class="line">/data/volumes/v1 192.168.56.0/24(rw,no_root_squash)</span><br><span class="line">/data/volumes/v2 192.168.56.0/24(rw,no_root_squash)</span><br><span class="line">/data/volumes/v3 192.168.56.0/24(rw,no_root_squash)</span><br><span class="line">/data/volumes/v4 192.168.56.0/24(rw,no_root_squash)</span><br><span class="line">/data/volumes/v5 192.168.56.0/24(rw,no_root_squash)</span><br><span class="line">[root@stor01 volumes]<span class="comment"># exportfs -arv</span></span><br><span class="line">exporting 192.168.56.0/24:/data/volumes/v5</span><br><span class="line">exporting 192.168.56.0/24:/data/volumes/v4</span><br><span class="line">exporting 192.168.56.0/24:/data/volumes/v3</span><br><span class="line">exporting 192.168.56.0/24:/data/volumes/v2</span><br><span class="line">exporting 192.168.56.0/24:/data/volumes/v1</span><br><span class="line">[root@stor01 volumes]<span class="comment"># showmount -e</span></span><br><span class="line">Export list <span class="keyword">for</span> stor01:</span><br><span class="line">/data/volumes/v5 192.168.56.0/24</span><br><span class="line">/data/volumes/v4 192.168.56.0/24</span><br><span class="line">/data/volumes/v3 192.168.56.0/24</span><br><span class="line">/data/volumes/v2 192.168.56.0/24</span><br><span class="line">/data/volumes/v1 192.168.56.0/24</span><br></pre></td></tr></table></figure><h2 id="2、定义PV"><a href="#2、定义PV" class="headerlink" title="2、定义PV"></a>2、定义PV</h2><p>这里定义了pvc的访问模式为多路读写，该访问模式必须在前面pv定义的访问模式之中。定义PVC申请的大小为2Gi，此时PVC会自动去匹配多路读写且大小为2Gi的PV，匹配成功获取PVC的状态即为Bound</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl explain pv</span></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl explain pv.spec.nfs</span></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># vim pv-demo.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: pv001</span><br><span class="line">  labels:</span><br><span class="line">    name: pv001</span><br><span class="line">spec:</span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/volumes/v1</span><br><span class="line">    server: stor01</span><br><span class="line">  accessModes: [<span class="string">"ReadWriteMany"</span>,<span class="string">"ReadWriteOnce"</span>]</span><br><span class="line">    <span class="comment">#accessModes（定义访问模型，有以下三种访问模型，以列表的方式存在，也就是说可以定义多个访问模式）</span></span><br><span class="line">    <span class="comment">#ReadWriteOnce（RWO）  单节点读写</span></span><br><span class="line"><span class="comment">#ReadOnlyMany（ROX）  多节点只读</span></span><br><span class="line"><span class="comment">#ReadWriteMany（RWX）  多节点读写</span></span><br><span class="line">  capacity:</span><br><span class="line">    storage: 1Gi</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: pv002</span><br><span class="line">  labels:</span><br><span class="line">    name: pv002</span><br><span class="line">spec:</span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/volumes/v2</span><br><span class="line">    server: stor01</span><br><span class="line">  accessModes: [<span class="string">"ReadWriteOnce"</span>]</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 2Gi</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: pv003</span><br><span class="line">  labels:</span><br><span class="line">    name: pv003</span><br><span class="line">spec:</span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/volumes/v3</span><br><span class="line">    server: stor01</span><br><span class="line">  accessModes: [<span class="string">"ReadWriteMany"</span>,<span class="string">"ReadWriteOnce"</span>]</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 2Gi</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: pv004</span><br><span class="line">  labels:</span><br><span class="line">    name: pv004</span><br><span class="line">spec:</span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/volumes/v4</span><br><span class="line">    server: stor01</span><br><span class="line">  accessModes: [<span class="string">"ReadWriteMany"</span>,<span class="string">"ReadWriteOnce"</span>]</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 4Gi</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: pv005</span><br><span class="line">  labels:</span><br><span class="line">    name: pv005</span><br><span class="line">spec:</span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/volumes/v5</span><br><span class="line">    server: stor01</span><br><span class="line">  accessModes: [<span class="string">"ReadWriteMany"</span>,<span class="string">"ReadWriteOnce"</span>]</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 5Gi</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pv-demo.yaml </span></span><br><span class="line">persistentvolume/pv001 created</span><br><span class="line">persistentvolume/pv002 created</span><br><span class="line">persistentvolume/pv003 created</span><br><span class="line">persistentvolume/pv004 created</span><br><span class="line">persistentvolume/pv005 created</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get pv</span></span><br><span class="line">NAME      CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM     STORAGECLASS   REASON    AGE</span><br><span class="line">pv001     1Gi        RWO,RWX        Retain           Available                                      7s</span><br><span class="line">pv002     2Gi        RWO            Retain           Available                                      7s</span><br><span class="line">pv003     2Gi        RWO,RWX        Retain           Available                                      7s</span><br><span class="line">pv004     4Gi        RWO,RWX        Retain           Available                                      7s</span><br><span class="line">pv005     5Gi        RWO,RWX        Retain           Available                                      7s</span><br></pre></td></tr></table></figure><h2 id="3、定义PVC"><a href="#3、定义PVC" class="headerlink" title="3、定义PVC"></a>3、定义PVC</h2><p>这里定义了pvc的访问模式为多路读写，该访问模式必须在前面pv定义的访问模式之中。定义PVC申请的大小为2Gi，此时PVC会自动去匹配多路读写且大小为2Gi的PV，匹配成功获取PVC的状态即为Bound</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master volumes ~]<span class="comment"># vim pod-vol-pvc.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: mypvc</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  accessModes: [<span class="string">"ReadWriteMany"</span>]</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 2Gi</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-vol-pvc</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: myapp</span><br><span class="line">    image: ikubernetes/myapp:v1</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: html</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">  volumes:</span><br><span class="line">    - name: html</span><br><span class="line">      persistentVolumeClaim:</span><br><span class="line">        claimName: mypvc</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pod-vol-pvc.yaml </span></span><br><span class="line">persistentvolumeclaim/mypvc created</span><br><span class="line">pod/pod-vol-pvc created</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get pv</span></span><br><span class="line">NAME      CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM           STORAGECLASS   REASON    AGE</span><br><span class="line">pv001     1Gi        RWO,RWX        Retain           Available                                            19m</span><br><span class="line">pv002     2Gi        RWO            Retain           Available                                            19m</span><br><span class="line">pv003     2Gi        RWO,RWX        Retain           Bound       default/mypvc                            19m</span><br><span class="line">pv004     4Gi        RWO,RWX        Retain           Available                                            19m</span><br><span class="line">pv005     5Gi        RWO,RWX        Retain           Available                                            19m</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get pvc</span></span><br><span class="line">NAME      STATUS    VOLUME    CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">mypvc     Bound     pv003     2Gi        RWO,RWX                       22s</span><br></pre></td></tr></table></figure><h2 id="4、测试访问"><a href="#4、测试访问" class="headerlink" title="4、测试访问"></a>4、测试访问</h2><p>在存储服务器上创建index.html，并写入数据，通过访问Pod进行查看，可以获取到相应的页面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@stor01 volumes]<span class="comment"># cd v3/</span></span><br><span class="line">[root@stor01 v3]<span class="comment"># echo "welcome to use pv3" &gt; index.html</span></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get pods -o wide</span></span><br><span class="line">pod-vol-pvc             1/1       Running   0          3m        10.244.2.39   k8s-node02</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># curl  10.244.2.39</span></span><br><span class="line">welcome to use pv3</span><br></pre></td></tr></table></figure><h1 id="StorageClass"><a href="#StorageClass" class="headerlink" title="StorageClass"></a>StorageClass</h1><p>在pv和pvc使用过程中存在的问题，在pvc申请存储空间时，未必就有现成的pv符合pvc申请的需求，上面nfs在做pvc可以成功的因素是因为我们做了指定的需求处理。那么当PVC申请的存储空间不一定有满足PVC要求的PV事，又该如何处理呢？？？为此，Kubernetes为管理员提供了描述存储”class（类）”的方法（StorageClass）。举个例子，在存储系统中划分一个1TB的存储空间提供给Kubernetes使用，当用户需要一个10G的PVC时，会立即通过restful发送请求，从而让存储空间创建一个10G的image，之后在我们的集群中定义成10G的PV供给给当前的PVC作为挂载使用。在此之前我们的存储系统必须支持restful接口，比如ceph分布式存储，而glusterfs则需要借助第三方接口完成这样的请求。</p><p>StorageClass 中包含 provisioner、parameters 和 reclaimPolicy 字段，当 class 需要动态分配 PersistentVolume 时会使用到。由于StorageClass需要一个独立的存储系统，此处就不再演示。</p><h1 id="配置容器应用：Secret和configMap"><a href="#配置容器应用：Secret和configMap" class="headerlink" title="配置容器应用：Secret和configMap"></a>配置容器应用：Secret和configMap</h1><p>在日常单机甚至集群状态下，我们需要对一个应用进行配置，只需要修改其配置文件即可。那么在容器中又该如何提供配置 信息呢？？？例如，为Nginx配置一个指定的server_name或worker进程数，为Tomcat的JVM配置其堆内存大小。传统的实践过程中通常有以下几种方式：</p><ul><li>启动容器时，通过命令传递参数</li><li>将定义好的配置文件通过镜像文件进行写入</li><li>通过环境变量的方式传递配置数据</li><li>挂载Docker卷传送配置文件</li></ul><p>而在Kubernetes系统之中也存在这样的组件，就是特殊的存储卷类型。其并不是提供pod存储空间，而是给管理员或用户提供从集群外部向Pod内部的应用注入配置信息的方式。这两种特殊类型的存储卷分别是：configMap和secret</p><ul><li><code>Secret</code>：用于向Pod传递敏感信息，比如密码，私钥，证书文件等，这些信息如果在容器中定义容易泄露，Secret资源可以让用户将这些信息存储在急群众，然后通过Pod进行挂载，实现敏感数据和系统解耦的效果。</li><li><code>ConfigMap</code>：主要用于向Pod注入非敏感数据，使用时，用户将数据直接存储在ConfigMap对象当中，然后Pod通过使用ConfigMap卷进行引用，实现容器的配置文件集中定义和管理。</li></ul><h2 id="Secret解析"><a href="#Secret解析" class="headerlink" title="Secret解析"></a>Secret解析</h2><p>Secret对象存储数据的方式是以键值方式存储数据，在Pod资源进行调用Secret的方式是通过环境变量或者存储卷的方式进行访问数据，解决了密码、token、密钥等敏感数据的配置问题，而不需要把这些敏感数据暴露到镜像或者Pod Spec中。另外，Secret对象的数据存储和打印格式为Base64编码的字符串，因此用户在创建Secret对象时，也需要提供该类型的编码格式的数据。在容器中以环境变量或存储卷的方式访问时，会自动解码为明文格式。需要注意的是，如果是在Master节点上，Secret对象以非加密的格式存储在etcd中，所以需要对etcd的管理和权限进行严格控制。</p><p>Secret有4种类型：</p><ul><li><p>Service Account ：用来访问Kubernetes API，由Kubernetes自动创建，并且会自动挂载到Pod的/run/secrets/kubernetes.io/serviceaccount目录中；</p></li><li><p>Opaque ：base64编码格式的Secret，用来存储密码、密钥、信息、证书等，类型标识符为generic；</p></li><li><p>kubernetes.io/dockerconfigjson ：用来存储私有docker registry的认证信息，类型标识为docker-registry。</p></li><li><p>kubernetes.io/tls：用于为SSL通信模式存储证书和私钥文件，命令式创建类型标识为tls。</p></li></ul><p><strong>命令式创建</strong></p><p>1、通过 –from-literal：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl create secret -h</span></span><br><span class="line">Create a secret using specified subcommand.</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  docker-registry Create a secret <span class="keyword">for</span> use with a Docker registry</span><br><span class="line">  generic         Create a secret from a <span class="built_in">local</span> file, directory or literal value</span><br><span class="line">  tls             Create a TLS secret</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  kubectl create secret [flags] [options]</span><br><span class="line"></span><br><span class="line">Use <span class="string">"kubectl &lt;command&gt; --help"</span> <span class="keyword">for</span> more information about a given <span class="built_in">command</span>.</span><br><span class="line">Use <span class="string">"kubectl options"</span> <span class="keyword">for</span> a list of global <span class="built_in">command</span>-line options (applies to all commands).</span><br><span class="line"></span><br><span class="line">每个 --from-literal 对应一个信息条目。</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl create secret generic mysecret --from-literal=username=admin --from-literal=password=123456</span></span><br><span class="line">secret/mysecret created</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get secret</span></span><br><span class="line">NAME                    TYPE                                  DATA      AGE</span><br><span class="line">mysecret                Opaque                                2         6s</span><br></pre></td></tr></table></figure><p>2、通过 –from-file：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># echo -n admin &gt; ./username</span></span><br><span class="line">[root@k8s-master ~]<span class="comment"># echo -n 123456 &gt; ./password</span></span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl create secret generic mysecret --from-file=./username --from-file=./password </span></span><br><span class="line">secret/mysecret created</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get secret</span></span><br><span class="line">NAME                    TYPE                                  DATA      AGE</span><br><span class="line">mysecret                Opaque                                2         6s</span><br></pre></td></tr></table></figure><p>3、通过 –from-env-file：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># cat &lt;&lt; EOF &gt; env.txt</span></span><br><span class="line">&gt; username=admin</span><br><span class="line">&gt; password=123456</span><br><span class="line">&gt; EOF</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl create secret generic mysecret --from-env-file=env.txt </span></span><br><span class="line">secret/mysecret created</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get secret</span></span><br><span class="line">NAME                    TYPE                                  DATA      AGE</span><br><span class="line">mysecret                Opaque                                2         10s</span><br></pre></td></tr></table></figure><p><strong>清单式创建</strong></p><p>通过 YAML 配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#事先完成敏感数据的Base64编码</span></span><br><span class="line">[root@k8s-master ~]<span class="comment"># echo -n admin |base64</span></span><br><span class="line">YWRtaW4=</span><br><span class="line">[root@k8s-master ~]<span class="comment"># echo -n 123456 |base64</span></span><br><span class="line">MTIzNDU2</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]<span class="comment"># vim secret.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: mysecret</span><br><span class="line">data:</span><br><span class="line">  username: YWRtaW4=</span><br><span class="line">  password: MTIzNDU2</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl apply -f secret.yaml </span></span><br><span class="line">secret/mysecret created</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get secret  #查看存在的 secret，显示有2条数据</span></span><br><span class="line">NAME                    TYPE                                  DATA      AGE</span><br><span class="line">mysecret                Opaque                                2         8s</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl describe secret mysecret  #查看数据的 Key</span></span><br><span class="line">Name:         mysecret</span><br><span class="line">Namespace:    default</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  </span><br><span class="line">Type:         Opaque</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">username:  5 bytes</span><br><span class="line">password:  6 bytes</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl edit secret mysecret  #查看具体的value，可以使用该命令</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  password: MTIzNDU2</span><br><span class="line">  username: YWRtaW4=</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">......</span><br><span class="line">[root@k8s-master ~]<span class="comment"># echo -n MTIzNDU2 |base64 --decode  #通过 base64 将 Value 反编码：</span></span><br><span class="line">123456</span><br><span class="line">[root@k8s-master ~]<span class="comment"># echo -n YWRtaW4= |base64 --decode</span></span><br><span class="line">admin</span><br></pre></td></tr></table></figure><p><strong>使用Secret</strong></p><p>Pod 可以通过 Volume 或者环境变量的方式使用 Secret</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master volumes]<span class="comment"># vim pod-secret-demo.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-secret</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: pod-secret</span><br><span class="line">    image: busybox</span><br><span class="line">    args:</span><br><span class="line">      - /bin/sh</span><br><span class="line">      - -c</span><br><span class="line">      - sleep 10;touch /tmp/healthy;sleep 30000</span><br><span class="line">    volumeMounts:   <span class="comment">#将 foo mount 到容器路径 /etc/foo，可指定读写权限为 readOnly。</span></span><br><span class="line">    - name: foo</span><br><span class="line">      mountPath: <span class="string">"/etc/foo"</span></span><br><span class="line">      readOnly: <span class="literal">true</span></span><br><span class="line">  volumes:    <span class="comment">#定义 volume foo，来源为 secret mysecret。</span></span><br><span class="line">  - name: foo</span><br><span class="line">    secret:</span><br><span class="line">      secretName: mysecret</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pod-secret-demo.yaml </span></span><br><span class="line">pod/pod-secret created</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get pods</span></span><br><span class="line">pod-secret                           1/1       Running   0          1m</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl exec -it pod-secret sh</span></span><br><span class="line">/ <span class="comment"># ls /etc/foo/</span></span><br><span class="line">password  username</span><br><span class="line">/ <span class="comment"># cat /etc/foo/username </span></span><br><span class="line">admin/ <span class="comment"># </span></span><br><span class="line">/ <span class="comment"># cat /etc/foo/password </span></span><br><span class="line">123456/ <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>可以看到，Kubernetes 会在指定的路径 /etc/foo 下为每条敏感数据创建一个文件，文件名就是数据条目的 Key，这里是 /etc/foo/username 和 /etc/foo/password，Value 则以明文存放在文件中。<br>也可以自定义存放数据的文件名，比如将配置文件改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master volumes]<span class="comment"># cat pod-secret-demo.yaml </span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-secret</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: pod-secret</span><br><span class="line">    image: busybox</span><br><span class="line">    args:</span><br><span class="line">      - /bin/sh</span><br><span class="line">      - -c</span><br><span class="line">      - sleep 10;touch /tmp/healthy;sleep 30000</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: foo</span><br><span class="line">      mountPath: <span class="string">"/etc/foo"</span></span><br><span class="line">      readOnly: <span class="literal">true</span></span><br><span class="line">  volumes:</span><br><span class="line">  - name: foo</span><br><span class="line">    secret:</span><br><span class="line">      secretName: mysecret</span><br><span class="line">      items:    <span class="comment">#自定义存放数据的文件名</span></span><br><span class="line">      - key: username</span><br><span class="line">        path: my-secret/my-username</span><br><span class="line">      - key: password</span><br><span class="line">        path: my-secret/my-password</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl delete pods pod-secret</span></span><br><span class="line">pod <span class="string">"pod-secret"</span> deleted</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pod-secret-demo.yaml </span></span><br><span class="line">pod/pod-secret created</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl exec -it pod-secret sh</span></span><br><span class="line">/ <span class="comment"># cat /etc/foo/my-secret/my-username </span></span><br><span class="line">admin</span><br><span class="line">/ <span class="comment"># cat /etc/foo/my-secret/my-password </span></span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>这时数据将分别存放在 /etc/foo/my-secret/my-username 和 /etc/foo/my-secret/my-password 中。</p><p>以 Volume 方式使用的 Secret 支持动态更新：Secret 更新后，容器中的数据也会更新。</p><p>将 password 更新为 abcdef，base64 编码为 YWJjZGVm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># vim secret.yaml </span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: mysecret</span><br><span class="line">data:</span><br><span class="line">  username: YWRtaW4=</span><br><span class="line">  password: YWJjZGVm</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl apply -f secret.yaml </span></span><br><span class="line">secret/mysecret configured</span><br><span class="line">/ <span class="comment"># cat /etc/foo/my-secret/my-password </span></span><br><span class="line">abcdef</span><br></pre></td></tr></table></figure><p>通过 Volume 使用 Secret，容器必须从文件读取数据，会稍显麻烦，Kubernetes 还支持通过环境变量使用 Secret。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master volumes]<span class="comment"># cp pod-secret-demo.yaml pod-secret-env-demo.yaml</span></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># vim pod-secret-env-demo.yaml </span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-secret-env</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: pod-secret-env</span><br><span class="line">    image: busybox</span><br><span class="line">    args:</span><br><span class="line">      - /bin/sh</span><br><span class="line">      - -c</span><br><span class="line">      - sleep 10;touch /tmp/healthy;sleep 30000</span><br><span class="line">    env:</span><br><span class="line">      - name: SECRET_USERNAME</span><br><span class="line">        valueFrom:</span><br><span class="line">          secretKeyRef:</span><br><span class="line">            name: mysecret</span><br><span class="line">            key: username</span><br><span class="line">      - name: SECRET_PASSWORD</span><br><span class="line">        valueFrom:</span><br><span class="line">          secretKeyRef:</span><br><span class="line">            name: mysecret</span><br><span class="line">            key: password</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl apply -f pod-secret-env-demo.yaml </span></span><br><span class="line">pod/pod-secret-env created</span><br><span class="line"></span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl exec -it pod-secret-env sh</span></span><br><span class="line">/ <span class="comment"># echo $SECRET_USERNAME</span></span><br><span class="line">admin</span><br><span class="line">/ <span class="comment"># echo $SECRET_PASSWORD</span></span><br><span class="line">abcdef</span><br></pre></td></tr></table></figure><p>通过环境变量 SECRET_USERNAME 和 SECRET_PASSWORD 成功读取到 Secret 的数据。<br>需要注意的是，环境变量读取 Secret 很方便，但无法支撑 Secret 动态更新。<br>Secret 可以为 Pod 提供密码、Token、私钥等敏感数据；对于一些非敏感数据，比如应用的配置信息，则可以用 ConfigMap。</p><h2 id="ConifgMap解析"><a href="#ConifgMap解析" class="headerlink" title="ConifgMap解析"></a>ConifgMap解析</h2><p>configmap是让配置文件从镜像中解耦，让镜像的可移植性和可复制性。许多应用程序会从配置文件、命令行参数或环境变量中读取配置信息。这些配置信息需要与docker image解耦，你总不能每修改一个配置就重做一个image吧？ConfigMap API给我们提供了向容器中注入配置信息的机制，ConfigMap可以被用来保存单个属性，也可以用来保存整个配置文件或者JSON二进制大对象。</p><p>ConfigMap API资源用来保存key-value pair配置数据，这个数据可以在pods里使用，或者被用来为像controller一样的系统组件存储配置数据。虽然ConfigMap跟Secrets类似，但是ConfigMap更方便的处理不含敏感信息的字符串。 注意：ConfigMaps不是属性配置文件的替代品。ConfigMaps只是作为多个properties文件的引用。可以把它理解为Linux系统中的/etc目录，专门用来存储配置文件的目录。下面举个例子，使用ConfigMap配置来创建Kuberntes Volumes，ConfigMap中的每个data项都会成为一个新文件。</p><p><strong>ConfigMap创建方式</strong></p><p>与 Secret 一样，ConfigMap 也支持四种创建方式：</p><ul><li>1、 通过 –from-literal：<br>每个 –from-literal 对应一个信息条目。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl create configmap nginx-config --from-literal=nginx_port=80 --from-literal=server_name=myapp.magedu.com</span></span><br><span class="line">configmap/nginx-config created</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl get cm</span></span><br><span class="line">NAME           DATA      AGE</span><br><span class="line">nginx-config   2         6s</span><br><span class="line">[root@k8s-master volumes]<span class="comment"># kubectl describe cm nginx-config</span></span><br><span class="line">Name:         nginx-config</span><br><span class="line">Namespace:    default</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">server_name:</span><br><span class="line">----</span><br><span class="line">myapp.magedu.com</span><br><span class="line">nginx_port:</span><br><span class="line">----</span><br><span class="line">80</span><br><span class="line">Events:  &lt;none&gt;</span><br></pre></td></tr></table></figure><p>2、通过 –from-file：<br>每个文件内容对应一个信息条目。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master mainfests]<span class="comment"># mkdir configmap &amp;&amp; cd configmap</span></span><br><span class="line">[root@k8s-master configmap]<span class="comment"># vim www.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">server_name myapp.magedu.com;</span><br><span class="line">listen 80;</span><br><span class="line">root /data/web/html;</span><br><span class="line">&#125;</span><br><span class="line">[root@k8s-master configmap]<span class="comment"># kubectl create configmap nginx-www --from-file=./www.conf </span></span><br><span class="line">configmap/nginx-www created</span><br><span class="line">[root@k8s-master configmap]<span class="comment"># kubectl get cm</span></span><br><span class="line">NAME           DATA      AGE</span><br><span class="line">nginx-config   2         3m</span><br><span class="line">nginx-www      1         4s</span><br><span class="line">[root@k8s-master configmap]<span class="comment"># kubectl get cm nginx-www -o yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  www.conf: <span class="string">"server &#123;\n\tserver_name myapp.magedu.com;\n\tlisten 80;\n\troot /data/web/html;\n&#125;\n"</span></span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: 2018-10-10T08:50:06Z</span><br><span class="line">  name: nginx-www</span><br><span class="line">  namespace: default</span><br><span class="line">  resourceVersion: <span class="string">"389929"</span></span><br><span class="line">  selfLink: /api/v1/namespaces/default/configmaps/nginx-www</span><br><span class="line">  uid: 7c3dfc35-cc69-11e8-801a-000c2972dc1f</span><br></pre></td></tr></table></figure><p><strong>使用configMap</strong></p><p>1、环境变量方式注入到pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master configmap]<span class="comment"># vim pod-configmap.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-cm-1</span><br><span class="line">  namespace: default</span><br><span class="line">  labels: </span><br><span class="line">    app: myapp</span><br><span class="line">    tier: frontend</span><br><span class="line">  annotations:</span><br><span class="line">    magedu.com/created-by: <span class="string">"cluster admin"</span></span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: myapp</span><br><span class="line">    image: ikubernetes/myapp:v1</span><br><span class="line">    ports:</span><br><span class="line">    - name: http</span><br><span class="line">      containerPort: 80 </span><br><span class="line">    env:</span><br><span class="line">    - name: NGINX_SERVER_PORT</span><br><span class="line">      valueFrom:</span><br><span class="line">        configMapKeyRef:</span><br><span class="line">          name: nginx-config</span><br><span class="line">          key: nginx_port</span><br><span class="line">    - name: NGINX_SERVER_NAME</span><br><span class="line">      valueFrom:</span><br><span class="line">        configMapKeyRef:</span><br><span class="line">          name: nginx-config</span><br><span class="line">          key: server_name</span><br><span class="line">[root@k8s-master configmap]<span class="comment"># kubectl apply -f pod-configmap.yaml </span></span><br><span class="line">pod/pod-cm-1 created</span><br><span class="line">[root@k8s-master configmap]<span class="comment"># kubectl exec -it pod-cm-1 -- /bin/sh</span></span><br><span class="line">/ <span class="comment"># echo $NGINX_SERVER_PORT</span></span><br><span class="line">80</span><br><span class="line">/ <span class="comment"># echo $NGINX_SERVER_NAME</span></span><br><span class="line">myapp.magedu.com</span><br></pre></td></tr></table></figure><p>修改端口，可以发现使用环境变化注入pod中的端口不会根据配置的更改而变化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master volumes]<span class="comment">#  kubectl edit cm nginx-config</span></span><br><span class="line">configmap/nginx-config edited</span><br><span class="line">/ <span class="comment"># echo $NGINX_SERVER_PORT</span></span><br><span class="line">80</span><br></pre></td></tr></table></figure><p>2、存储卷方式挂载configmap：<br>Volume 形式的 ConfigMap 也支持动态更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master configmap ~]<span class="comment"># vim pod-configmap-2.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-cm-2</span><br><span class="line">  namespace: default</span><br><span class="line">  labels: </span><br><span class="line">    app: myapp</span><br><span class="line">    tier: frontend</span><br><span class="line">  annotations:</span><br><span class="line">    magedu.com/created-by: <span class="string">"cluster admin"</span></span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: myapp</span><br><span class="line">    image: ikubernetes/myapp:v1</span><br><span class="line">    ports:</span><br><span class="line">    - name: http</span><br><span class="line">      containerPort: 80 </span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginxconf</span><br><span class="line">      mountPath: /etc/nginx/config.d/</span><br><span class="line">      readOnly: <span class="literal">true</span></span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginxconf</span><br><span class="line">    configMap:</span><br><span class="line">      name: nginx-config</span><br><span class="line">[root@k8s-master configmap ~]<span class="comment"># kubectl apply -f pod-configmap-2.yaml</span></span><br><span class="line">pod/pod-cm-2 created</span><br><span class="line">[root@k8s-master configmap ~]<span class="comment"># kubectl get pods</span></span><br><span class="line">[root@k8s-master configmap ~]<span class="comment"># kubectl exec -it pod-cm-2 -- /bin/sh</span></span><br><span class="line">/ <span class="comment"># cd /etc/nginx/config.d</span></span><br><span class="line">/ <span class="comment"># cat nginx_port</span></span><br><span class="line">80</span><br><span class="line">/ <span class="comment"># cat server_name </span></span><br><span class="line">myapp.magedu.com</span><br><span class="line"></span><br><span class="line">[root@k8s-master configmap ~]<span class="comment"># kubectl edit cm nginx-config  #修改端口，再在容器中查看端口是否变化。</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  nginx_port: <span class="string">"800"</span></span><br><span class="line">  ......</span><br><span class="line">  </span><br><span class="line">/ <span class="comment"># cat nginx_port</span></span><br><span class="line">800</span><br><span class="line">[root@k8s-master configmap ~]<span class="comment"># kubectl delete -f pod-configmap2.yaml</span></span><br></pre></td></tr></table></figure><p>3、以nginx-www配置nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master configmap ~]<span class="comment"># vim pod-configmap3.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-cm-3</span><br><span class="line">  namespace: default</span><br><span class="line">  labels: </span><br><span class="line">    app: myapp</span><br><span class="line">    tier: frontend</span><br><span class="line">  annotations:</span><br><span class="line">    magedu.com/created-by: <span class="string">"cluster admin"</span></span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: myapp</span><br><span class="line">    image: ikubernetes/myapp:v1</span><br><span class="line">    ports:</span><br><span class="line">    - name: http</span><br><span class="line">      containerPort: 80 </span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: nginxconf</span><br><span class="line">      mountPath: /etc/nginx/conf.d/</span><br><span class="line">      readOnly: <span class="literal">true</span></span><br><span class="line">  volumes:</span><br><span class="line">  - name: nginxconf</span><br><span class="line">    configMap:</span><br><span class="line">      name: nginx-www</span><br><span class="line">[root@k8s-master configmap ~]<span class="comment"># kubectl apply -f pod-configmap3.yaml</span></span><br><span class="line">pod/pod-cm-3 created</span><br><span class="line">[root@k8s-master configmap ~]<span class="comment"># kubectl get pods</span></span><br><span class="line">[root@k8s-master configmap]<span class="comment"># kubectl exec -it pod-cm-3 -- /bin/sh</span></span><br><span class="line">/ <span class="comment"># cd /etc/nginx/conf.d/</span></span><br><span class="line">/etc/nginx/conf.d <span class="comment"># ls</span></span><br><span class="line">www.conf</span><br><span class="line">/etc/nginx/conf.d <span class="comment"># cat www.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">server_name myapp.magedu.com;</span><br><span class="line">listen 80;</span><br><span class="line">root /data/web/html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;为了保证数据的持久性，必须保证数据在外部存储在docker容器中，为了实现数据的持久性存储，在宿主机和容器内做映射，可以保证在容器的生命周期
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="https://hxqxiaoqi.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>k8s之pod控制器</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/05/26/k8s%E4%B9%8Bpod%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/05/26/k8s之pod控制器/</id>
    <published>2020-05-26T07:06:00.000Z</published>
    <updated>2020-07-24T03:50:58.280Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Pod控制器是用于实现管理pod的中间层，确保pod资源符合预期的状态，pod的资源出现故障时，会尝试 进行重启，当根据重启策略无效，则会重新新建pod的资源。</p><p>pod控制器有多种类型：</p><ol><li><strong>ReplicaSet</strong>：代用户创建指定数量的pod副本数量，确保pod副本数量符合预期状态，并且支持滚动式自动扩容和缩容功能。主要用于配合<code>Deployment</code>控制器使用。</li><li><strong>Deployment</strong>：工作在ReplicaSet之上，用于管理无状态应用，目前来说最好的控制器。支持滚动更新和回滚功能，还提供声明式配置。</li><li><strong>DaemonSet</strong>：用于确保集群中的每一个节点只运行特定的pod副本，通常用于实现系统级后台任务。比如ELK服务</li><li><strong>StatefulSet</strong>：管理有状态应用</li></ol><h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><p>功能：</p><ul><li>（1）使用Deployment来创建ReplicaSet。ReplicaSet在后台创建pod。检查启动状态，看它是成功还是失败。</li><li>（2）然后，通过更新Deployment的PodTemplateSpec字段来声明Pod的新状态。这会创建一个新的ReplicaSet，Deployment会按照控制的速率将pod从旧的ReplicaSet移动到新的ReplicaSet中。</li><li>（3）如果当前状态不稳定，回滚到之前的Deployment revision。每次回滚都会更新Deployment的revision。</li><li>（4）扩容Deployment以满足更高的负载。</li><li>（5）暂停Deployment来应用PodTemplateSpec的多个修复，然后恢复上线。</li><li>（6）根据Deployment 的状态判断上线是否hang住了。</li><li>（7）清除旧的不必要的 ReplicaSet。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span>　　<span class="comment">#api版本定义</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span>　　<span class="comment">#定义资源类型为Deployment</span></span><br><span class="line"><span class="attr">metadata:</span>　　<span class="comment">#元数据定义</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">myapp</span> <span class="comment">#Deployment名称</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">default</span> <span class="comment">#应用的名称空间</span></span><br><span class="line"><span class="attr">spec:</span>　　<span class="comment">#Deployment的规格定义</span></span><br><span class="line"><span class="attr">    replicas:</span> <span class="number">2</span>　　<span class="comment">#定义副本数量为2个</span></span><br><span class="line"><span class="attr">    selector:</span>　　　　<span class="comment">#标签选择器，定义匹配pod的标签</span></span><br><span class="line"><span class="attr">        matchLabels:</span></span><br><span class="line"><span class="attr">            app:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">    template:</span>　　<span class="comment">#pod的模板定义</span></span><br><span class="line"><span class="attr">        metadata:</span>　　<span class="comment">#pod的元数据定义</span></span><br><span class="line"><span class="attr">            labels:</span> 　　<span class="comment">#定义pod的标签，需要和上面定义的标签一致，也可以多出其他标签</span></span><br><span class="line"><span class="attr">                app:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">        spec:</span>　　<span class="comment">#pod的规格定义</span></span><br><span class="line"><span class="attr">            containers:</span>　　<span class="comment">#容器定义</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">myapp-container</span>　　<span class="comment">#容器名称</span></span><br><span class="line"><span class="attr">              image:</span> <span class="string">ikubernetes/myapp:v1</span>　　<span class="comment">#容器镜像</span></span><br><span class="line"><span class="attr">              ports:</span>　　<span class="comment">#暴露端口</span></span><br><span class="line"><span class="attr">              - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">                containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h1 id="DaemonSet"><a href="#DaemonSet" class="headerlink" title="DaemonSet"></a>DaemonSet</h1><p>DaemonSet 确保全部（或者一些）Node 上运行一个 Pod 的副本。当有 Node 加入集群时，也会为他们新增一个 Pod 。当有 Node 从集群移除时，这些 Pod 也会被回收。删除 DaemonSet 将会删除它创建的所有 Pod。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">node-exporter</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">node-exporter</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ns-monitor</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">node-exporter</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">node-exporter</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">node-exporter</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">prom/node-exporter:v0.16.0</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">            - containerPort:</span> <span class="number">9100</span></span><br><span class="line"><span class="attr">              protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">              name:</span><span class="string">http</span></span><br><span class="line"><span class="attr">      hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      hostPID:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="StatefulSet"><a href="#StatefulSet" class="headerlink" title="StatefulSet"></a>StatefulSet</h1><p>一个完整的StatefulSet控制器由一个Headless Service、一个StatefulSet和一个volumeClaimTemplate组成。如下资源清单中的定义：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">  clusterIP:</span> <span class="string">None</span> <span class="comment"># 集群设置None就是headless service 无头服务</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">nginx</span> <span class="comment"># 必须设置项</span></span><br><span class="line"><span class="attr">  serviceName:</span> <span class="string">"nginx"</span>  <span class="comment">#声明它属于哪个Headless Service.</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">3</span> <span class="comment"># 默认1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">nginx</span> <span class="comment"># 必须设置项</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      terminationGracePeriodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">www</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/usr/share/nginx/html</span></span><br><span class="line"><span class="attr">  volumeClaimTemplates:</span>   <span class="comment">#可看作pvc的模板</span></span><br><span class="line"><span class="attr">  - metadata:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">www</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      accessModes:</span> <span class="string">[</span> <span class="string">"ReadWriteOnce"</span> <span class="string">]</span></span><br><span class="line"><span class="attr">      storageClassName:</span> <span class="string">"gluster-heketi"</span>  <span class="comment">#存储类名，改为集群中已存在的</span></span><br><span class="line"><span class="attr">      resources:</span></span><br><span class="line"><span class="attr">        requests:</span></span><br><span class="line"><span class="attr">          storage:</span> <span class="number">1</span><span class="string">Gi</span></span><br></pre></td></tr></table></figure><ul><li>Headless Service：名为nginx，用来定义Pod网络标识( DNS domain)。</li><li>StatefulSet：定义具体应用，名为Nginx，有三个Pod副本，并为每个Pod定义了一个域名。</li><li>volumeClaimTemplates： 存储卷申请模板，创建PVC，指定pvc名称大小，将自动创建pvc，且pvc必须由存储类供应。</li></ul><p><strong>为什么需要 headless service 无头服务？</strong><br>在用Deployment时，每一个Pod名称是没有顺序的，是随机字符串，因此是Pod名称是无序的，但是在statefulset中要求必须是有序 ，每一个pod不能被随意取代，pod重建后pod名称还是一样的。而pod IP是变化的，所以是以Pod名称来识别。pod名称是pod唯一性的标识符，必须持久稳定有效。这时候要用到无头服务，它可以给每个Pod一个唯一的名称 。</p><p><strong>为什么需要volumeClaimTemplate？</strong><br>对于有状态的副本集都会用到持久存储，对于分布式系统来讲，它的最大特点是数据是不一样的，所以各个节点不能使用同一存储卷，每个节点有自已的专用存储，但是如果在Deployment中的Pod template里定义的存储卷，是所有副本集共用一个存储卷，数据是相同的，因为是基于模板来的 ，而statefulset中每个Pod都要自已的专有存储卷，所以statefulset的存储卷就不能再用Pod模板来创建了，于是statefulSet使用volumeClaimTemplate，称为卷申请模板，它会为每个Pod生成不同的pvc，并绑定pv， 从而实现各pod有专用存储。这就是为什么要用volumeClaimTemplate的原因。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;Pod控制器是用于实现管理pod的中间层，确保pod资源符合预期的状态，pod的资源出现故障时，会尝试 进行重启，当根据重启策略无效，则会重
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="https://hxqxiaoqi.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>k8s之yaml详解</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/05/25/k8s%E4%B9%8Byaml%E8%AF%A6%E8%A7%A3/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/05/25/k8s之yaml详解/</id>
    <published>2020-05-25T07:06:00.000Z</published>
    <updated>2020-07-24T03:49:59.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置介绍"><a href="#配置介绍" class="headerlink" title="配置介绍"></a>配置介绍</h1><p>使用yaml格式创建服务，更容易管理</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span>   <span class="comment">#接口版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span>                 <span class="comment">#接口类型</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">cango-demo</span>               <span class="comment">#Deployment名称</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">cango-prd</span>           <span class="comment">#命名空间</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">cango-demo</span>              <span class="comment">#标签</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">   strategy:</span></span><br><span class="line"><span class="attr">    rollingUpdate:</span>  <span class="comment">##由于replicas为3,则整个升级,pod个数在2-4个之间</span></span><br><span class="line"><span class="attr">      maxSurge:</span> <span class="number">1</span>      <span class="comment">#滚动升级时会先启动1个pod</span></span><br><span class="line"><span class="attr">      maxUnavailable:</span> <span class="number">1</span> <span class="comment">#滚动升级时允许的最大Unavailable的pod个数</span></span><br><span class="line"><span class="attr">  template:</span>         </span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">cango-demo</span>  <span class="comment">#模板名称必填</span></span><br><span class="line"><span class="attr">    sepc:</span> <span class="comment">#定义容器模板，该模板可以包含多个容器</span></span><br><span class="line"><span class="attr">      containers:</span>                                                                   </span><br><span class="line"><span class="attr">        - name:</span> <span class="string">cango-demo</span>                                                           <span class="comment">#镜像名称</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">swr.cn-east-2.myhuaweicloud.com/cango-prd/cango-demo:0.0.1-SNAPSHOT</span> <span class="comment">#镜像地址</span></span><br><span class="line"><span class="attr">          command:</span> <span class="string">[</span> <span class="string">"/bin/sh"</span><span class="string">,"-c","cat</span> <span class="string">/etc/config/path/to/special-key"</span> <span class="string">]</span>    <span class="comment">#启动命令</span></span><br><span class="line"><span class="attr">          args:</span>                                                                <span class="comment">#启动参数</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'-storage.local.retention=$(STORAGE_RETENTION)'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'-storage.local.memory-chunks=$(STORAGE_MEMORY_CHUNKS)'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'-config.file=/etc/prometheus/prometheus.yml'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'-alertmanager.url=http://alertmanager:9093/alertmanager'</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">'-web.external-url=$(EXTERNAL_URL)'</span></span><br><span class="line">    <span class="comment">#如果command和args均没有写，那么用Docker默认的配置。</span></span><br><span class="line">    <span class="comment">#如果command写了，但args没有写，那么Docker默认的配置会被忽略而且仅仅执行.yaml文件的command（不带任何参数的）。</span></span><br><span class="line">    <span class="comment">#如果command没写，但args写了，那么Docker默认配置的ENTRYPOINT的命令行会被执行，但是调用的参数是.yaml中的args。</span></span><br><span class="line">    <span class="comment">#如果如果command和args都写了，那么Docker默认的配置被忽略，使用.yaml的配置。</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">IfNotPresent</span>  <span class="comment">#如果不存在则拉取</span></span><br><span class="line"><span class="attr">          livenessProbe:</span>       <span class="comment">#表示container是否处于live状态。如果LivenessProbe失败，LivenessProbe将会通知kubelet对应的container不健康了。随后kubelet将kill掉container，并根据RestarPolicy进行进一步的操作。默认情况下LivenessProbe在第一次检测之前初始化值为Success，如果container没有提供LivenessProbe，则也认为是Success；</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/health</span> <span class="comment">#如果没有心跳检测接口就为/</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">60</span> <span class="comment">##启动后延时多久开始运行检测</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">            readinessProbe:</span></span><br><span class="line"><span class="attr">          readinessProbe:</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/health</span> <span class="comment">#如果没有心跳检测接口就为/</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">30</span> <span class="comment">##启动后延时多久开始运行检测</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">          resources:</span>              <span class="comment">##CPU内存限制</span></span><br><span class="line"><span class="attr">            requests:</span></span><br><span class="line"><span class="attr">              cpu:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">              memory:</span> <span class="number">2048</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">            limits:</span></span><br><span class="line"><span class="attr">              cpu:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">              memory:</span> <span class="number">2048</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">          env:</span>                    <span class="comment">##通过环境变量的方式，直接传递pod=自定义Linux OS环境变量</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">LOCAL_KEY</span>     <span class="comment">#本地Key</span></span><br><span class="line"><span class="attr">              value:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">CONFIG_MAP_KEY</span>  <span class="comment">#局策略可使用configMap的配置Key，</span></span><br><span class="line"><span class="attr">              valueFrom:</span></span><br><span class="line"><span class="attr">                configMapKeyRef:</span></span><br><span class="line"><span class="attr">                  name:</span> <span class="string">special-config</span>   <span class="comment">#configmap中找到name为special-config</span></span><br><span class="line"><span class="attr">                  key:</span> <span class="string">special.type</span>      <span class="comment">#找到name为special-config里data下的key</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">              containerPort:</span> <span class="number">8080</span> <span class="comment">#对service暴露端口</span></span><br><span class="line"><span class="attr">          volumeMounts:</span>     <span class="comment">#挂载volumes中定义的磁盘</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">log-cache</span></span><br><span class="line"><span class="attr">            mount:</span> <span class="string">/tmp/log</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">sdb</span>       <span class="comment">#普通用法，该卷跟随容器销毁，挂载一个目录</span></span><br><span class="line"><span class="attr">            mountPath:</span> <span class="string">/data/media</span>    </span><br><span class="line"><span class="attr">          - name:</span> <span class="string">nfs-client-root</span>    <span class="comment">#直接挂载硬盘方法，如挂载下面的nfs目录到/mnt/nfs</span></span><br><span class="line"><span class="attr">            mountPath:</span> <span class="string">/mnt/nfs</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">example-volume-config</span>  <span class="comment">#高级用法第1种，将ConfigMap的log-script,backup-script分别挂载到/etc/config目录下的一个相对路径path/to/...下，如果存在同名文件，直接覆盖。</span></span><br><span class="line"><span class="attr">            mountPath:</span> <span class="string">/etc/config</span>       </span><br><span class="line"><span class="attr">          - name:</span> <span class="string">rbd-pvc</span>                <span class="comment">#高级用法第2中，挂载PVC(PresistentVolumeClaim)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用volume将ConfigMap作为文件或目录直接挂载，其中每一个key-value键值对都会生成一个文件，key为文件名，value为内容，</span></span><br><span class="line"><span class="attr">  volumes:</span>  <span class="comment"># 定义磁盘给上面volumeMounts挂载</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">log-cache</span></span><br><span class="line"><span class="attr">    emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">sdb</span>  <span class="comment">#挂载宿主机上面的目录</span></span><br><span class="line"><span class="attr">    hostPath:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/any/path/it/will/be/replaced</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">example-volume-config</span>  <span class="comment"># 供ConfigMap文件内容到指定路径使用</span></span><br><span class="line"><span class="attr">    configMap:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">example-volume-config</span>  <span class="comment">#ConfigMap中名称</span></span><br><span class="line"><span class="attr">      items:</span></span><br><span class="line"><span class="attr">      - key:</span> <span class="string">log-script</span>           <span class="comment">#ConfigMap中的Key</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">path/to/log-script</span>  <span class="comment">#指定目录下的一个相对路径path/to/log-script</span></span><br><span class="line"><span class="attr">      - key:</span> <span class="string">backup-script</span>        <span class="comment">#ConfigMap中的Key</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">path/to/backup-script</span>  <span class="comment">#指定目录下的一个相对路径path/to/backup-script</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">nfs-client-root</span>         <span class="comment">#供挂载NFS存储类型</span></span><br><span class="line"><span class="attr">    nfs:</span></span><br><span class="line"><span class="attr">      server:</span> <span class="number">10.42</span><span class="number">.0</span><span class="number">.55</span>          <span class="comment">#NFS服务器地址</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/opt/public</span>           <span class="comment">#showmount -e 看一下路径</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">rbd-pvc</span>                 <span class="comment">#挂载PVC磁盘</span></span><br><span class="line"><span class="attr">    persistentVolumeClaim:</span></span><br><span class="line"><span class="attr">      claimName:</span> <span class="string">rbd-pvc1</span>         <span class="comment">#挂载已经申请的pvc磁盘</span></span><br></pre></td></tr></table></figure><h1 id="nginx安装例子"><a href="#nginx安装例子" class="headerlink" title="nginx安装例子"></a>nginx安装例子</h1><p>创建 deployment</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="comment">#指定的对象名称</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-deployment</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    web:</span> <span class="string">nginx123</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="comment">#副本数</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="comment">#选择器</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="comment">#匹配标签：app: nginx</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="comment">#创建具体的pod</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">nginx:1.12</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>创建 service</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-service</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="comment">#标签要跟nginx-deployment中对应上</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">89</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用yaml文件创建，create创建，需要使用replace更新</span></span><br><span class="line">kubectl create -f nginx_service.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># apply创建，直接执行即更新</span></span><br><span class="line">kubectl apply -f nginx_service.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除配置</span></span><br><span class="line">kubectl delete -f nginx_service.yaml</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;配置介绍&quot;&gt;&lt;a href=&quot;#配置介绍&quot; class=&quot;headerlink&quot; title=&quot;配置介绍&quot;&gt;&lt;/a&gt;配置介绍&lt;/h1&gt;&lt;p&gt;使用yaml格式创建服务，更容易管理&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="https://hxqxiaoqi.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>k8s之内存和cpu配置</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/05/25/k8s%E4%B9%8B%E5%86%85%E5%AD%98%E5%92%8Ccpu%E9%85%8D%E7%BD%AE/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/05/25/k8s之内存和cpu配置/</id>
    <published>2020-05-25T07:06:00.000Z</published>
    <updated>2020-07-24T03:50:10.424Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>资源请求（requests）：即允许运行的最小资源，pod调度规则根据该值判断。</p><p>资源限制（limits）：即允许运行的最大资源，limits不会影响pod调度规则，因此limits总和可以超过服务器提供的总资源数，服务运行超过该值会被kill重启。</p><p>另外：k8s仅会确保pod能够获得他们请求的cpu时间额度，他们能否获得额外的cpu时间，则取决于其他正在运行的作业对cpu资源的占用情况。例如，对于总数为1000m的cpu来说，容器a请求使用200m，容器b请求使用500m，在不超出它们各自的最大限额的前提下，余下的300m在双方都需要时会以2:5的方式进行配置。（限制cpu是限制其运行占用cpu时间）</p><h1 id="名称空间资源配置"><a href="#名称空间资源配置" class="headerlink" title="名称空间资源配置"></a>名称空间资源配置</h1><p>设置名称空间<code>namespaces</code>默认资源</p><p>名称空间设置是应用到名称空间下所有未定义资源配置的pod中，如果pod单独定义资源配置，则优先使用pod定义的配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看名称空间</span></span><br><span class="line">kubectl get ns</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建名称空间 default</span></span><br><span class="line">kubectl create namespace default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看名称空间资源配置信息</span></span><br><span class="line">kubectl describe namespaces default</span><br></pre></td></tr></table></figure><p>创建 <code>limit-default.yaml</code>：编辑以下内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">LimitRange</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">limit-range</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  limits:</span></span><br><span class="line"><span class="attr">  - default:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">0.25</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">2048</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    defaultRequest:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">0.1</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">128</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">Container</span></span><br></pre></td></tr></table></figure><p>更新配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用配置</span></span><br><span class="line">kubectl create -f <span class="built_in">limit</span>-default.yaml --namespace=default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果配置还有更改，使用以下命令更新</span></span><br><span class="line">kubectl replace -f <span class="built_in">limit</span>-default.yaml --namespace=default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看名称空间限制</span></span><br><span class="line">kubectl describe namespaces default</span><br></pre></td></tr></table></figure><h1 id="pod资源配置"><a href="#pod资源配置" class="headerlink" title="pod资源配置"></a>pod资源配置</h1><p>pod资源配置有<code>deployment</code> 控制器定义的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看 deployment 控制器</span></span><br><span class="line">kubectl get deployment</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 deployment 控制器</span></span><br><span class="line">kubectl edit deployment nginx-deployment</span><br></pre></td></tr></table></figure><p>以下为修改内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  containers:</span></span><br><span class="line"><span class="attr">  - image:</span> <span class="attr">nginx:1.16</span></span><br><span class="line"><span class="attr">    imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">    lifecycle:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="attr">    - containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">      protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="attr">      limits:</span></span><br><span class="line"><span class="attr">        cpu:</span> <span class="number">500</span><span class="string">m</span></span><br><span class="line"><span class="attr">        memory:</span> <span class="number">500</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">      requests:</span></span><br><span class="line"><span class="attr">        cpu:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">        memory:</span> <span class="number">128</span><span class="string">Mi</span></span><br></pre></td></tr></table></figure><p>查看pod修改后的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod nginx-deployment-79788f59b6-nfvst --output=yaml --namespace=default</span><br></pre></td></tr></table></figure><p>查看pod所在node节点资源配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl  describe  node node01</span><br></pre></td></tr></table></figure><h1 id="资源配置详解"><a href="#资源配置详解" class="headerlink" title="资源配置详解"></a>资源配置详解</h1><p>配置示例</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">LimitRange</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">mylimits</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  limits:</span></span><br><span class="line"><span class="attr">  - max:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="string">"4"</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">2</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">    min:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">200</span><span class="string">m</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">6</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    maxLimitRequestRatio:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">  - default:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">300</span><span class="string">m</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">200</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    defaultRequest:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">200</span><span class="string">m</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">100</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    max:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="string">"2"</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">    min:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">3</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    maxLimitRequestRatio:</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">Container</span></span><br></pre></td></tr></table></figure><p><code>pod</code>部分：</p><ol><li><code>max</code>表示<code>pod</code>中所有容器资源的<code>Limit</code>值和的上限，也就是整个<code>pod</code>资源的最大<code>Limit</code>，如果<code>pod</code>定义中的<code>Limit</code>值大于<code>LimitRange</code>中的值，则<code>pod</code>无法成功创建。</li><li><code>min</code>表示<code>pod</code>中所有容器资源请求总和的下限，也就是所有容器<code>request</code>的资源总和不能小于<code>min</code>中的值，否则<code>pod</code>无法成功创建。</li><li><code>maxLimitRequestRatio</code>表示<code>pod</code>中所有容器资源请求的<code>Limit</code>值和<code>request</code>值比值的上限，例如该<code>pod</code>中<code>cpu</code>的<code>Limit</code>值为3，而<code>request</code>为0.5，此时比值为6，创建<code>pod</code>将会失败。</li></ol><p><code>container</code>部分</p><ol><li>在<code>container</code>的部分，<code>max</code>、<code>min</code>和<code>maxLimitRequestRatio</code>的含义和<code>pod</code>中的类似，只不过是针对单个的容器而言。下面说明几个情况：</li></ol><blockquote><p>如果<code>container</code>设置了<code>max</code>， <code>pod</code>中的容器必须设置<code>limit</code>，如果未设置，则使用<code>defaultlimt</code>的值，如果<code>defaultlimit</code>也没有设置，则无法成功创建</p><p>如果设置了<code>container</code>的<code>min</code>，创建容器的时候必须设置<code>request</code>的值，如果没有设置，则使用<code>defaultrequest</code>，如果没有<code>defaultrequest</code>，则默认等于容器的<code>limit</code>值，如果<code>limit</code>也没有，启动就会报错</p></blockquote><ol><li><code>defaultrequest</code>和<code>defaultlimit</code>则是默认值，注意：<code>pod</code>级别没有这两项设置</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;资源请求（requests）：即允许运行的最小资源，pod调度规则根据该值判断。&lt;/p&gt;
&lt;p&gt;资源限制（limits）：即允许运行的最大资
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="https://hxqxiaoqi.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>k8s之权限管理</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/05/24/k8s%E4%B9%8B%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/05/24/k8s之权限管理/</id>
    <published>2020-05-24T07:06:00.000Z</published>
    <updated>2020-07-24T03:50:16.585Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.orchome.com/1308" target="_blank" rel="noopener">https://www.orchome.com/1308</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.orchome.com/1308&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.orchome.com/1308&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="https://hxqxiaoqi.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>k8s之更新回滚</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/05/24/k8s%E4%B9%8B%E6%9B%B4%E6%96%B0%E5%9B%9E%E6%BB%9A/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/05/24/k8s之更新回滚/</id>
    <published>2020-05-24T06:06:00.000Z</published>
    <updated>2020-07-24T03:50:07.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>记录k8s的更新操作</p><p>更新的三种方式：</p><ol><li>kubectl edit 修改配置</li><li>kubectl set image 修改镜像版本（只介绍该方法）</li><li>kubectl patch 修改配置</li></ol><h1 id="更新回滚"><a href="#更新回滚" class="headerlink" title="更新回滚"></a>更新回滚</h1><p>以一个简单的deployment为例来进行说明：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-deployment</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">nginx:1.12</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>创建deployment</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> --record：记录版本，没有该参数无法回滚</span></span><br><span class="line">kubectl apply -f nginx-deployment.yaml --record</span><br></pre></td></tr></table></figure><p>更新与回滚</p><p>只有spec.template.spec.containers.image或者spec.template.metadata.labels发生变化时才会出发更新rolout操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新镜像版本</span></span><br><span class="line">kubectl <span class="built_in">set</span> image deployment nginx-deployment nginx=nginx:1.14 --record</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已有版本，数字最大的为当前使用镜像</span></span><br><span class="line">kubectl rollout <span class="built_in">history</span> deployment nginx-deployment</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚上一个版本 </span></span><br><span class="line">kubectl rollout undo deployment nginx-deployment</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚到指定版本</span></span><br><span class="line">kubectl rollout undo deployment nginx-deployment --to-revision=2</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看升级状态</span></span><br><span class="line">kubectl rollout status deploy nginx </span><br><span class="line"></span><br><span class="line"><span class="comment">#升级暂停</span></span><br><span class="line">kubectl rollout pause deployment nginx </span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复升级</span></span><br><span class="line">kubectl rollout resume deployment nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;记录k8s的更新操作&lt;/p&gt;
&lt;p&gt;更新的三种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;kubectl edit 修改配置&lt;/li&gt;
&lt;li&gt;kub
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="https://hxqxiaoqi.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>k8s安装之sealos</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/05/22/k8s%E5%AE%89%E8%A3%85%E4%B9%8Bsealos/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/05/22/k8s安装之sealos/</id>
    <published>2020-05-22T08:00:00.000Z</published>
    <updated>2020-07-24T03:50:23.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>极其方便的k8s安装方式</p><p>参考资料：</p><p>github地址：<a href="https://github.com/fanux/sealos" target="_blank" rel="noopener">https://github.com/fanux/sealos</a></p><p>Kuboard：<a href="https://kuboard.cn/install/install-dashboard.html" target="_blank" rel="noopener">https://kuboard.cn/install/install-dashboard.html</a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><font color="32CD32">虚拟机环境</font></p><table><thead><tr><th align="center">主机名</th><th align="center">IP地址</th><th align="center">系统</th></tr></thead><tbody><tr><td align="center">etc01</td><td align="center">192.168.10.121</td><td align="center">centos7.6</td></tr><tr><td align="center">etc02</td><td align="center">192.168.10.122</td><td align="center">centos7.6</td></tr><tr><td align="center">etc03</td><td align="center">192.168.10.123</td><td align="center">centos7.6</td></tr><tr><td align="center">node01</td><td align="center">192.168.10.124</td><td align="center">centos7.6</td></tr><tr><td align="center">node02</td><td align="center">192.168.10.125</td><td align="center">centos7.6</td></tr></tbody></table><p><font color="32CD32">安装环境</font></p><p>每台虚拟机执行以下脚本，简单的系统优化，也可以不需要执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS-7.6</span></span><br><span class="line">rm -rf /etc/yum.repos.d/*</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.<span class="built_in">help</span>/CentOS7-Base-163.repo</span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export PS1='\[\e[1;32m\][\u@\h \W]\\$ \[\e[0m\]'"</span> &gt;&gt; /etc/bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export TIME_STYLE='+%Y-%m-%d %H:%M:%S'"</span> &gt;&gt; /etc/bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export HISTTIMEFORMAT='%F %T '"</span> &gt;&gt; /etc/profile</span><br><span class="line">sed -i <span class="string">"s/^#UseDNS.*/UseDNS no/g"</span> /etc/ssh/sshd_config</span><br><span class="line">sed -i <span class="string">"s/SELINUX=.*/SELINUX=disabled/g"</span> /etc/selinux/config</span><br><span class="line">systemctl stop firewalld &amp;&amp; systemctl <span class="built_in">disable</span> firewalld &amp;&amp; rpm -e --nodeps firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> chronyd</span><br><span class="line">systemctl stop chronyd</span><br><span class="line">yum -y install iptables-services</span><br><span class="line">systemctl start iptables &amp;&amp; iptables -F &amp;&amp; service iptables save</span><br><span class="line">yum -y install lrzsz net-tools vim psmisc bash-completion kernel-tools tree wget dos2unix ntpdate unzip tcpdump</span><br><span class="line">cat &gt;&gt; ~/.vimrc &lt;&lt;EOF</span><br><span class="line"><span class="built_in">set</span> ts=4</span><br><span class="line"><span class="built_in">set</span> expandtab</span><br><span class="line"><span class="built_in">set</span> paste</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># 根据虚拟机设置的主机名更改</span></span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname node03</span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br><span class="line">yum --disablerepo=<span class="string">"*"</span> --enablerepo=<span class="string">"elrepo-kernel"</span> list available</span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel-ml -y</span><br><span class="line">grub2-set-default 0</span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">yum install ntp -y</span><br><span class="line">ntpdate -u ntp1.aliyun.com</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p><font color="32CD32">安装命令</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载并安装sealos, sealos是个golang的二进制工具，直接下载拷贝到bin目录即可, release页面也可下载</span></span><br><span class="line">$ wget -c https://sealyun.oss-cn-beijing.aliyuncs.com/latest/sealos &amp;&amp; \</span><br><span class="line">    chmod +x sealos &amp;&amp; mv sealos /usr/bin </span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载离线资源包</span></span><br><span class="line">$ wget -c https://sealyun.oss-cn-beijing.aliyuncs.com/d551b0b9e67e0416d0f9dce870a16665-1.18.0/kube1.18.0.tar.gz </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装一个三master的kubernetes集群，密码需要一致</span></span><br><span class="line">$ sealos init --passwd 123456 \</span><br><span class="line">--master 192.168.10.121  --master 192.168.10.122  --master 192.168.10.123  \</span><br><span class="line">--node 192.168.10.124 \</span><br><span class="line">--pkg-url /root/kube1.18.0.tar.gz \</span><br><span class="line">--version v1.18.0</span><br></pre></td></tr></table></figure><p><font color="32CD32">集群操作</font></p><p>增加master</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sealos join --master 192.168.0.6 --master 192.168.0.7</span><br><span class="line">sealos join --master 192.168.0.6-192.168.0.9  <span class="comment"># 或者多个连续IP</span></span><br></pre></td></tr></table></figure><p>增加node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sealos join --node 192.168.0.6 --node 192.168.0.7</span><br><span class="line">sealos join --node 192.168.0.6-192.168.0.9  <span class="comment"># 或者多个连续IP</span></span><br></pre></td></tr></table></figure><p>删除指定master节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sealos clean --master 192.168.0.6 --master 192.168.0.7</span><br><span class="line">sealos clean --master 192.168.0.6-192.168.0.9  <span class="comment"># 或者多个连续IP</span></span><br></pre></td></tr></table></figure><p>删除指定node节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sealos clean --node 192.168.0.6 --node 192.168.0.7</span><br><span class="line">sealos clean --node 192.168.0.6-192.168.0.9  <span class="comment"># 或者多个连续IP</span></span><br></pre></td></tr></table></figure><p>清理集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sealos clean</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;极其方便的k8s安装方式&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;github地址：&lt;a href=&quot;https://github.com/
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="https://hxqxiaoqi.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>registry 私有仓库配置</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/05/19/registry%20%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AE/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/05/19/registry 私有仓库配置/</id>
    <published>2020-05-19T09:00:00.000Z</published>
    <updated>2020-07-24T03:50:32.171Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Registry是一个几种存放image并对外提供上传下载以及一系列API的服务。可以很容易和本地源代码以及远端Git服务的关系相对应。</p><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line"><span class="comment"># -e REGISTRY_STORAGE_DELETE_ENABLED=true 开启允许删除</span></span><br><span class="line"><span class="comment"># -v /data/registry:/var/lib/registry 持久化存储目录</span></span><br><span class="line">docker run --name docker-registry -d -p 5000:5000 -e REGISTRY_STORAGE_DELETE_ENABLED=<span class="literal">true</span> -v /data/registry:/var/lib/registry registry</span><br></pre></td></tr></table></figure><h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有镜像</span></span><br><span class="line">curl -X GET http://&lt;registry_ip&gt;:&lt;registry_port&gt;/v2/_catalog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出指定镜像的全部标签</span></span><br><span class="line">curl -X GET http://&lt;registry_ip&gt;:&lt;registry_port&gt;/v2/&lt;image_name&gt;/tags/list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传镜像，如果上传失败，需要配置/usr/lib/systemd/system/docker.service中添加私有仓库地址</span></span><br><span class="line"><span class="comment"># 例：</span></span><br><span class="line">ExecStart=/usr/bin/dockerd --insecure-registry=http://192.168.40.102:5000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除镜像，上面容器启动时已经允许删除</span></span><br><span class="line"><span class="comment"># 获取sha</span></span><br><span class="line">sha=`ls /data/registry/docker/registry/v2/repositories/<span class="variable">$image</span>/_manifests/revisions/sha256`</span><br><span class="line"><span class="comment"># 根据sha删除镜像，但空间不会释放</span></span><br><span class="line">curl -XDELETE http://&lt;registryurl&gt;/v2/<span class="variable">$image</span>/manifests/sha256:<span class="variable">$sha</span></span><br><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it registry sh</span><br><span class="line"><span class="comment"># 垃圾回收，释放空间</span></span><br><span class="line">registry garbage-collect /etc/docker/registry/config.yml</span><br><span class="line"><span class="comment"># 推出容器，删除残留目录</span></span><br><span class="line">rm -rf /opt/registry/docker/registry/v2/repositories/<span class="variable">$image</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;Registry是一个几种存放image并对外提供上传下载以及一系列API的服务。可以很容易和本地源代码以及远端Git服务的关系相对应。&lt;/
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="docker" scheme="https://hxqxiaoqi.gitee.io/tags/docker/"/>
    
      <category term="k8s" scheme="https://hxqxiaoqi.gitee.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>docker修改存储目录和连接私库</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/05/14/docker%E4%BF%AE%E6%94%B9%E5%AD%98%E5%82%A8%E7%9B%AE%E5%BD%95%E5%92%8C%E8%BF%9E%E6%8E%A5%E7%A7%81%E5%BA%93/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/05/14/docker修改存储目录和连接私库/</id>
    <published>2020-05-14T10:27:43.000Z</published>
    <updated>2020-07-24T03:51:08.286Z</updated>
    
    <content type="html"><![CDATA[<p>两种方式：</p><p>方式一：</p><p>vim /etc/docker/daemon.json</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">     <span class="string">"https://bxsfpjcb.mirror.aliyuncs.com"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"max-concurrent-downloads"</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="attr">"log-level"</span>: <span class="string">"warn"</span>,</span><br><span class="line">  <span class="attr">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="attr">"max-size"</span>: <span class="string">"10m"</span>,</span><br><span class="line">    <span class="attr">"max-file"</span>: <span class="string">"3"</span></span><br><span class="line">    &#125;,</span><br><span class="line"># 修改私库地址</span><br><span class="line">  "insecure-registries":</span><br><span class="line">        ["127.0.0.1","192.168.10.121:30000","192.168.10.122:30000","192.168.10.123:30000"],</span><br><span class="line"># 修改存储目录</span><br><span class="line">  "data-root":"/data/docker"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>修改存储目录后，cp原docker目录到指定的目录中，重启daemon-reload和docker</li></ul><p>方式二：</p><p>vim /usr/lib/systemd/system/docker.service</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExecStart=/usr/bin/dockerd --graph /data/docker --insecure-registry=http://192.168.10.121:30000 -H fd:// --containerd=/run/containerd/containerd.sock</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;两种方式：&lt;/p&gt;
&lt;p&gt;方式一：&lt;/p&gt;
&lt;p&gt;vim /etc/docker/daemon.json&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://hxqxiaoqi.gitee.io/categories/kubernetes/"/>
    
    
      <category term="docker" scheme="https://hxqxiaoqi.gitee.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>openldap 安装</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/04/30/openldap%20%E5%AE%89%E8%A3%85/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/04/30/openldap 安装/</id>
    <published>2020-04-30T04:27:43.000Z</published>
    <updated>2020-07-24T04:07:32.519Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><font color="32CD32">LDAP</font>（Lightweight Directory Access Protocol）是基于X.500标准的轻量目录访问协议。它比X.500具有更快的查询速度和更低的资源消耗，精简灵活，支持TCP/IP协议。LDAP为用户管理提供了统一认证服务，解决了办公环境中多套用户认证和项目管理系统相互独立分散的难题，而OpenLDAP 是LDAP的开源实现。</p><p>其实就是各个支持ldap协议的应用，统一账号的地方，而不需要在每个应用上注册管理单独账号。</p><p><font color="32CD32">cn ：</font>common name 用户名</p><p>对象的属性为CN，例如一个用户的名字为：张三，那么“张三”就是一个CN。</p><p><font color="32CD32">ou : </font>OrganizationUnit 组织单位</p><p>o和ou都是ldap目录结构的一个属性，建立目录的时候可选新建o，ou 等。在配置我司交换设备ldap的时候具体是配置ou，o还是cn等，要具体看ldap服务器的相应目录是什么属性。</p><p><font color="32CD32">o：</font>organizationName 组织名</p><p><font color="32CD32">uid: </font>userid</p><p>对象的属性为uid，例如我司一个员工的名字为：zsq，他的UID为：z02691，ldap查询的时候可以根据cn，也可以根据uid。配置ldap查询的时候需要考虑用何种查询方式。我司两种方式都支持，具体我司设备配置根据何种方式查询需要有ldap服务器的相关配置来决定。</p><p><font color="32CD32">dc：</font>域组件</p><p>DC类似于dns中的每个元素，例如h3c.com，“.”符号分开的两个单词可以看成两个DC，</p><p><font color="32CD32">dn：</font>Distinguished Name</p><p>类似于DNS，DN与DNS的区别是：组成DN的每个值都有一个属性类型，例如:H3c.com是一个dns，那么用dn表示为：dc=h3c,dc=com 级别越高越靠后。H3c和com的属性都是DC。DN可以表示为ldap的某个目录，也可以表示成目录中的某个对象，这个对象可以是用户等。</p><blockquote><p>例如：CN=test,OU=developer,DC=domainname,DC=com </p><p>在上面的代码中 cn=test 可能代表一个用户名，ou=developer 代表一个 active directory 中的组织单位。这句话的含义可能就是说明 test 这个对象处在domainname.com 域的 developer 组织单元中。</p></blockquote><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><p><font color="32CD32">实验环境</font></p><table><thead><tr><th align="center">主机名</th><th align="center">IP</th><th align="center">安装服务</th><th align="center">系统版本</th></tr></thead><tbody><tr><td align="center">server</td><td align="center">192.168.40.100</td><td align="center">openldap openldap-servers openldap-clients</td><td align="center">centos7.4</td></tr><tr><td align="center">client</td><td align="center">192.168.40.101</td><td align="center">openldap openldap-servers openldap-clients</td><td align="center">centos7.4</td></tr></tbody></table><p><font color="32CD32">关闭防火墙和selinux</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">"s/SELINUX=enforcing/SELINUX=disabled/g"</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><p><font color="32CD32">配置epel源</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br></pre></td></tr></table></figure><p><font color="32CD32">OpenLDAP安装</font></p><p>注：以下操作没有特殊说明，均在server主机操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install openldap openldap-servers openldap-clients -y</span><br><span class="line">cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</span><br><span class="line">systemctl start slapd</span><br><span class="line">systemctl <span class="built_in">enable</span> slapd</span><br><span class="line">systemctl status slapd</span><br></pre></td></tr></table></figure><p><font color="32CD32">配置管理员密码</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slappasswd -s 111111</span><br><span class="line">&#123;SSHA&#125;AjIAg98NFvRRlhoBOvsfVqMeAGZwi5O9</span><br></pre></td></tr></table></figure><p><font color="32CD32">生成的密码写入到 rootpwd.ldif 文件中</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF&gt;rootpwd.ldif</span><br><span class="line">dn: olcDatabase=&#123;0&#125;config,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line">olcRootPW: &#123;SSHA&#125;AjIAg98NFvRRlhoBOvsfVqMeAGZwi5O9</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 相关参数说明：</span></span><br><span class="line"><span class="comment"># olcRootPW参数值为slappasswd命令的结果输出。</span></span><br><span class="line"><span class="comment"># olcRootPW: &#123;SSHA&#125;AjIAg98NFvRRlhoBOvsfVqMeAGZwi5O9指定了属性值。</span></span><br><span class="line"><span class="comment"># ldif文件是LDAP中数据交换的文件格式。文件内容采用的是key-value形式。注意value后面不能有空格。</span></span><br><span class="line"><span class="comment"># olc（OnlineConfiguration）表示写入LDAP后立即生效。</span></span><br><span class="line"><span class="comment"># changetype: modify表示修改entry，此外changetype的值也可以是add,delete等。</span></span><br><span class="line"><span class="comment"># add: olcRootPW表示对这个entry新增olcRootPW的属性。</span></span><br></pre></td></tr></table></figure><p><font color="32CD32">写入配置</font></p><p>执行命令，添加 rootpwd.ldif 配置 到 openldap 中：ldap所有修改操作都需要编写单独的文件，切记不要直接去修改原有的配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapadd -Y EXTERNAL -H ldapi:/// -f rootpwd.ldif</span><br></pre></td></tr></table></figure><p><font color="32CD32">导入schema</font></p><p>schema包含支持特殊场景的相关属性，可选择性导入或全部导入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /etc/openldap/schema/*.ldif | <span class="keyword">while</span> <span class="built_in">read</span> i; <span class="keyword">do</span> ldapadd -Y EXTERNAL -H ldapi:/// -f <span class="variable">$i</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><font color="32CD32">新建默认域配置文件</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF&gt; domain.ldif</span><br><span class="line">dn: olcDatabase=&#123;1&#125;monitor,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to * by dn.base=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span> <span class="built_in">read</span> by dn.base=<span class="string">"cn=Manager,dc=mydomain,dc=com"</span> <span class="built_in">read</span> by * none</span><br><span class="line"></span><br><span class="line"><span class="comment"># olcDatabase=&#123;2&#125;hdb，改配置名需要到/etc/openldap/slapd.d/cn\=config/目录查看，不是都一样的，需要修改</span></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcSuffix</span><br><span class="line">olcSuffix: dc=mydomain,dc=com</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcRootDN</span><br><span class="line">olcRootDN: cn=Manager,dc=mydomain,dc=com</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line"><span class="comment"># 上面生成的密码填写到这，或可以重新生成一个填写，与管理员密码区分</span></span><br><span class="line">olcRootPW: &#123;SSHA&#125;7AA7V1xy++LVZcUbBWYYM9/81wfODiIK</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to attrs=userPassword,shadowLastChange by dn=<span class="string">"cn=Manager,dc=mydomain,dc=com"</span> write by anonymous auth by self write by * none</span><br><span class="line">olcAccess: &#123;1&#125;to dn.base=<span class="string">""</span> by * <span class="built_in">read</span></span><br><span class="line">olcAccess: &#123;2&#125;to * by dn=<span class="string">"cn=Manager,dc=mydomain,dc=com"</span> write by * <span class="built_in">read</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><font color="32CD32">写入配置</font></p><p>执行命令，添加 domain.ldif 配置 到 openldap 中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapmodify -Y EXTERNAL -H ldapi:/// -f domain.ldif</span><br></pre></td></tr></table></figure><p><font color="32CD32">添加基本信息</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF&gt; basedomain.ldif</span><br><span class="line">dn: dc=mydomain,dc=com</span><br><span class="line">objectClass: top</span><br><span class="line">objectClass: dcObject</span><br><span class="line">objectclass: organization</span><br><span class="line">o: mydomain com</span><br><span class="line">dc: mydomain</span><br><span class="line"></span><br><span class="line">dn: cn=Manager,dc=mydomain,dc=com</span><br><span class="line">objectClass: organizationalRole</span><br><span class="line">cn: Manager</span><br><span class="line">description: Directory Manager</span><br><span class="line"></span><br><span class="line">dn: ou=People,dc=mydomain,dc=com</span><br><span class="line">objectClass: organizationalUnit</span><br><span class="line">ou: People</span><br><span class="line"></span><br><span class="line">dn: ou=Group,dc=mydomain,dc=com</span><br><span class="line">objectClass: organizationalUnit</span><br><span class="line">ou: Group</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><font color="32CD32">写入</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapadd -x -D cn=Manager,dc=mydomain,dc=com -W -f basedomain.ldif</span><br></pre></td></tr></table></figure><p><font color="32CD32">查看信息</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -LLL -W -x -D <span class="string">"cn=Manager,dc=mydomain,dc=com"</span> -H ldap://localhost -b<span class="string">"dc=mydomain,dc=com"</span></span><br></pre></td></tr></table></figure><p>如果没有报错，则openldap服务端安装成功。</p><h1 id="安装-ldapadmin-web-管理"><a href="#安装-ldapadmin-web-管理" class="headerlink" title="安装 ldapadmin web 管理"></a>安装 ldapadmin web 管理</h1><p>在OpenLDAP运行节点安装ldapadmin工具包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y httpd php php-mbstring php-pear phpldapadmin</span><br></pre></td></tr></table></figure><p>修改 /etc/httpd/httpd.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># line 86: 修改admin邮箱地址</span></span><br><span class="line">ServerAdmin root@openldap.mydomain.world</span><br><span class="line"></span><br><span class="line"><span class="comment"># line 95: 修改主机域名</span></span><br><span class="line">ServerName www.mydomain.com:80</span><br><span class="line"></span><br><span class="line"><span class="comment"># line 152: 修改成如下内容：</span></span><br><span class="line">AllowOverride All</span><br><span class="line"></span><br><span class="line"><span class="comment"># line 165: 添加可访问目录名的文件名称</span></span><br><span class="line">DirectoryIndex index.html index.cgi index.php</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在文件末尾增加如下两部分内容</span></span><br><span class="line"><span class="comment"># server's response header</span></span><br><span class="line">ServerTokens Prod</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalive is ON</span></span><br><span class="line">KeepAlive On</span><br></pre></td></tr></table></figure><p>启动Apache服务并设置开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd</span><br><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br></pre></td></tr></table></figure><p>编辑 /etc/phpldapadmin/config.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注释掉398行，并取消397行的注释，修改后内容如下：</span></span><br><span class="line"><span class="variable">$servers</span>-&gt;setValue(<span class="string">'login'</span>,<span class="string">'attr'</span>,<span class="string">'dn'</span>);</span><br><span class="line">// <span class="variable">$servers</span>-&gt;setValue(<span class="string">'login'</span>,<span class="string">'attr'</span>,<span class="string">'uid'</span>);</span><br></pre></td></tr></table></figure><p>编辑 /etc/httpd/conf.d/phpldapadmin.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory/usr/share/phpldapadmin/htdocs&gt;</span><br><span class="line">  &lt;IfModule mod_authz_core.c&gt;</span><br><span class="line">    <span class="comment"># Apache 2.4</span></span><br><span class="line">    Require <span class="built_in">local</span></span><br><span class="line">    Require all granted</span><br><span class="line">  &lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p>重启Apache服务使配置生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><p>访问</p><p>账号：cn=Manager,dc=mydomain,dc=com</p><p>密码：111111</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.40.100/ldapadmin/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;&lt;font color=&quot;32CD32&quot;&gt;LDAP&lt;/font&gt;（Lightweight Directory Access Protocol
      
    
    </summary>
    
      <category term="linux基础" scheme="https://hxqxiaoqi.gitee.io/categories/linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="ldap" scheme="https://hxqxiaoqi.gitee.io/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>flink 部署</title>
    <link href="https://hxqxiaoqi.gitee.io/2020/04/26/flink%20%E9%83%A8%E7%BD%B2/"/>
    <id>https://hxqxiaoqi.gitee.io/2020/04/26/flink 部署/</id>
    <published>2020-04-26T05:00:00.000Z</published>
    <updated>2020-07-24T03:52:50.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><font color="32CD32">Flink</font> 是新的stream计算引擎，用java实现。既可以处理stream data也可以处理batch data，可以同时兼顾Spark以及Spark streaming的功能，与Spark不同的是，Flink本质上只有stream的概念，batch被认为是special stream。Flink在运行中主要有三个组件组成，JobClient，JobManager 和 TaskManager</p><p>用户首先提交Flink程序到JobClient，经过JobClient的处理、解析、优化提交到JobManager，最后由TaskManager运行task。</p><h1 id="组件说明"><a href="#组件说明" class="headerlink" title="组件说明"></a>组件说明</h1><p><font color="32CD32">JobManager</font></p><p>JobManager是一个进程，主要负责申请资源，协调以及控制整个job的执行过程，具体包括，调度任务、处理checkpoint、容错等等，在接收到JobClient提交的执行计划之后，针对收到的执行计划，继续解析，因为JobClient只是形成一个operaor层面的执行计划，所以JobManager继续解析执行计划（根据算子的并发度，划分task），形成一个可以被实际调度的由task组成的拓扑图，最后向集群申请资源，一旦资源就绪，就调度task到TaskManager。</p><p><font color="32CD32">TaskManager</font></p><p>TaskManager是一个进程，及一个JVM（Flink用java实现）。主要作用是接收并执行JobManager发送的task，并且与JobManager通信，反馈任务状态信息，比如任务分执行中，执行完等状态，上文提到的checkpoint的部分信息也是TaskManager反馈给JobManager的。如果说JobManager是master的话，那么TaskManager就是worker主要用来执行任务。在TaskManager内可以运行多个task。多个task运行在一个JVM内有几个好处，首先task可以通过多路复用的方式TCP连接，其次task可以共享节点之间的心跳信息，减少了网络传输。TaskManager并不是最细粒度的概念，每个TaskManager像一个容器一样，包含一个多或多个Slot。</p><p><font color="32CD32">Slot</font></p><p>Slot是TaskManager资源粒度的划分，每个Slot都有自己独立的内存。所有Slot平均分配TaskManger的内存，比如TaskManager分配给Solt的内存为8G，两个Slot，每个Slot的内存为4G，四个Slot，每个Slot的内存为2G，值得注意的是，Slot仅划分内存，不涉及cpu的划分。同时Slot是Flink中的任务执行器（类似Storm中Executor），每个Slot可以运行多个task，而且一个task会以单独的线程来运行。</p><p><font color="32CD32">ResourceManager</font></p><p>ResourceManager主要负责管理任务管理器（TaskManager）的插槽（slot），Slot时Flink定义的处理资源单元；ResourceManager将有空闲插槽的TaskManager分配给JobManager。如果ResourceManager没有足够的插槽来满足JobManager的请求，它可以向资源提供平台发起会话，以提供启动TaskManager进程的容器。</p><h1 id="flink-部署"><a href="#flink-部署" class="headerlink" title="flink 部署"></a>flink 部署</h1><p>Flink 有三种部署模式，分别是 Local、Standalone Cluster 和 Yarn Cluster。</p><ul><li>Local 单机模式，适合用于实验环境</li><li>Standalone Cluster 集群模式，适合用于测试环境，配合zk和hdfs，可部署高可用模式，可用于生产环境</li><li>Yarn Cluster 基于hadoop Yarn 组件进行部署，支持高可用，适合用于生产环境</li></ul><h2 id="Local-模式"><a href="#Local-模式" class="headerlink" title="Local 模式"></a>Local 模式</h2><ol><li>安装jdk</li><li>下载包解压</li><li>直接运行即可</li></ol><h2 id="Standalone-模式"><a href="#Standalone-模式" class="headerlink" title="Standalone 模式"></a>Standalone 模式</h2><p><font color="32CD32">实验环境</font></p><table><thead><tr><th align="center">IP</th><th align="center">主机名</th><th align="center">安装服务</th></tr></thead><tbody><tr><td align="center">192.168.40.100</td><td align="center">master</td><td align="center">jdk1.8，flink1.7.1</td></tr><tr><td align="center">192.168.40.101</td><td align="center">worker1</td><td align="center">jdk1.8，flink1.7.1</td></tr><tr><td align="center">192.168.40.102</td><td align="center">worker2</td><td align="center">jdk1.8，flink1.7.1</td></tr></tbody></table><p><font color="32CD32">jdk1.8安装</font></p><p><a href="https://hxqxiaoqi.gitee.io/2019/06/04/JDK1.8环境安装-linux/">jdk1.8 安装跳转</a> 所有节点都需要安装</p><p><font color="32CD32">设置ssh免密</font></p><p>在master上执行以下脚本，根据实际情况修改IP和密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ssh.sh &lt;&lt; EOF</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum install -y expect</span><br><span class="line"></span><br><span class="line"><span class="comment">#分发公钥</span></span><br><span class="line">ssh-keygen -t rsa -P <span class="string">""</span> -f /root/.ssh/id_rsa</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> 192.168.40.100 192.168.40.101 192.168.40.102</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">expect -c <span class="string">"</span></span><br><span class="line"><span class="string">spawn ssh-copy-id -i /root/.ssh/id_rsa.pub root@\$i</span></span><br><span class="line"><span class="string">        expect &#123;</span></span><br><span class="line"><span class="string">                \"*yes/no*\" &#123;send \"yes\r\"; exp_continue&#125;</span></span><br><span class="line"><span class="string">                \"*password*\" &#123;send \"123123\r\"; exp_continue&#125;</span></span><br><span class="line"><span class="string">                \"*Password*\" &#123;send \"123123\r\";&#125;</span></span><br><span class="line"><span class="string">        &#125; "</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br><span class="line">bash ssh.sh</span><br></pre></td></tr></table></figure><p><font color="32CD32">flink1.7.1 安装</font></p><p>以下操作，没有特殊说明，均在master上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://archive.apache.org/dist/flink/flink-1.7.1/flink-1.7.1-bin-hadoop27-scala_2.11.tgz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xf flink-1.7.1-bin-hadoop27-scala_2.11.tgz -C /opt</span><br></pre></td></tr></table></figure><p>修改配置：/opt/flink-1.7.1/conf/masters</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.40.100:8081</span><br></pre></td></tr></table></figure><p>修改配置：/opt/flink-1.7.1/conf/slaves</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.40.102</span><br><span class="line">192.168.40.101</span><br></pre></td></tr></table></figure><p>修改配置：/opt/flink-1.7.1/conf/flink-conf.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jobmanager地址</span></span><br><span class="line"><span class="string">jobmanager.rpc.address:</span> <span class="number">192.168</span><span class="number">.40</span><span class="number">.100</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># JobManager的端口号</span></span><br><span class="line"><span class="string">jobmanager.rpc.port:</span> <span class="number">6123</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jobmanager可用最大内存，根据服务器内存设置</span></span><br><span class="line"><span class="string">jobmanager.heap.size:</span> <span class="number">1024</span><span class="string">m</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># taskmanager可用最大内存，也就是每个taskmanager所在的服务器能用的最大内存</span></span><br><span class="line"><span class="string">taskmanager.heap.size:</span> <span class="number">1024</span><span class="string">m</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每台taskmanager最大插槽数，可以根据cpu核数设定，用于划分内存，如：上面的值设置16G，slot设置2，每个slot有8G可用</span></span><br><span class="line"><span class="string">taskmanager.numberOfTaskSlots:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认使用插槽数，每个job默认分配的slot数</span></span><br><span class="line"><span class="string">parallelism.default:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/profile &lt;&lt; EOF</span><br><span class="line"><span class="built_in">export</span> FLINK_HOME=/opt/flink-1.7.1</span><br><span class="line"><span class="built_in">export</span> PATH=\<span class="variable">$PATH</span>:\<span class="variable">$FLINK_HOME</span>/bin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>分发配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> node_ip <span class="keyword">in</span> 192.168.40.101 192.168.40.102</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"&gt;&gt;&gt; <span class="variable">$&#123;node_ip&#125;</span>"</span></span><br><span class="line">    scp -r /opt/flink-1.7.1/ root@<span class="variable">$&#123;node_ip&#125;</span>:/opt</span><br><span class="line">    scp /etc/profile root@<span class="variable">$&#123;node_ip&#125;</span>:/etc/</span><br><span class="line">    ssh root@<span class="variable">$&#123;node_ip&#125;</span> <span class="string">"source /etc/profile"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>启动与停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/opt/flink-1.7.1/bin/start-cluster.sh</span><br><span class="line">/opt/flink-1.7.1/bin/stop-cluster.sh</span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># flink web管理界面，可以在浏览器访问</span></span><br><span class="line">curl http://192.168.40.100:8081</span><br></pre></td></tr></table></figure><p>运行任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/flink-1.7.1/</span><br><span class="line">./bin/flink run examples/streaming/WordCount.jar --input /opt/flink-1.7.1/README.txt</span><br></pre></td></tr></table></figure><h2 id="Standalone-HA-模式"><a href="#Standalone-HA-模式" class="headerlink" title="Standalone HA 模式"></a>Standalone HA 模式</h2><p>首先，我们需要知道 Flink 有两种部署的模式，分别是 Standalone 以及 Yarn Cluster 模式。对于 Standalone 来说，Flink 必须依赖于 Zookeeper 来实现 JobManager 的 HA（Zookeeper 已经成为了大部分开源框架 HA 必不可少的模块）。在 Zookeeper 的帮助下，一个 Standalone 的 Flink 集群会同时有多个活着的 JobManager，其中只有一个处于工作状态，其他处于 Standby 状态。当工作中的 JobManager 失去连接后（如宕机或 Crash），Zookeeper 会从 Standby 中选举新的 JobManager 来接管 Flink 集群。</p><p><font color="32CD32">zookeeper 安装</font></p><p><a href="https://hxqxiaoqi.gitee.io/2020/03/26/zookeeper%20集群搭建/">zookeeper 集群安装跳转</a></p><p><font color="32CD32">修改配置：conf/flink-conf.yaml</font></p><p>继续之前的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#jobmanager.rpc.address: master#注释rpc</span></span><br><span class="line">high-availability:zookeeper                             <span class="comment">#指定高可用模式（必须）</span></span><br><span class="line">high-availability.zookeeper.quorum:master:2181,worker1:2181,worker2:2181  <span class="comment">#ZooKeeper仲裁是ZooKeeper服务器的复制组，它提供分布式协调服务（必须）</span></span><br><span class="line">high-availability.storageDir:hdfs:///flink/ha/       <span class="comment">#JobManager元数据保存在文件系统storageDir中，只有指向此状态的指针存储在ZooKeeper中（必须）</span></span><br></pre></td></tr></table></figure><p><font color="32CD32">修改：conf/masters</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">master:8081</span><br><span class="line">worker1:8081</span><br></pre></td></tr></table></figure><p><font color="32CD32">修改：conf/slaves</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">master</span><br><span class="line">worker1</span><br><span class="line">worker2</span><br></pre></td></tr></table></figure><p><font color="32CD32">启动</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/start-cluster.sh</span><br></pre></td></tr></table></figure><p><font color="32CD32">查看</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@master flink-1.7.1]<span class="comment"># jps</span></span><br><span class="line">10402 ResourceManager</span><br><span class="line">18563 Jps</span><br><span class="line">18261 TaskManagerRunner</span><br><span class="line">2056 NameNode</span><br><span class="line">17754 StandaloneSessionClusterEntrypoint</span><br><span class="line">2252 SecondaryNameNode</span><br><span class="line">6879 QuorumPeerMain</span><br><span class="line"></span><br><span class="line">[root@worker1 flink-1.7.1]<span class="comment"># jps</span></span><br><span class="line">1201 DataNode</span><br><span class="line">3938 QuorumPeerMain</span><br><span class="line">6274 NodeManager</span><br><span class="line">10787 StandaloneSessionClusterEntrypoint</span><br><span class="line">11273 TaskManagerRunner</span><br><span class="line">11453 Jps</span><br><span class="line"></span><br><span class="line">[root@worker2 flink-1.7.1]<span class="comment"># jps</span></span><br><span class="line">6177 Jps</span><br><span class="line">5988 TaskManagerRunner</span><br><span class="line">2135 QuorumPeerMain</span><br><span class="line">2698 NodeManager</span><br><span class="line">1199 DataNode</span><br></pre></td></tr></table></figure><p><font color="32CD32">测试</font></p><ol><li>登录web界面，查看master在哪台服务器上</li><li>kill掉master</li><li>查看master是否有更改</li></ol><h2 id="Flink-on-yarn-部署模式"><a href="#Flink-on-yarn-部署模式" class="headerlink" title="Flink on yarn 部署模式"></a>Flink on yarn 部署模式</h2><p><a href="https://hxqxiaoqi.gitee.io/2020/03/20/hadoop%20完全分布式搭建/">安装hadoop集群</a></p><p>因Flink强大的灵活性及开箱即用的原则， 因此提交作业分为2种情况：</p><ul><li>yarn seesion</li><li>Flink run</li></ul><p>这2者对于现有大数据平台资源使用率有着很大的区别：</p><ul><li>1.第一种yarn seesion(Start a long-running Flink cluster on YARN)这种方式需要先启动集群，然后在提交作业，接着会向yarn申请一块空间后，资源永远保持不变。如果资源满了，下一个作业就无法提交，只能等到yarn中的其中一个作业执行完成后，释放了资源，那下一个作业才会正常提交.</li><li>2.第二种Flink run直接在YARN上提交运行Flink作业(Run a Flink job on YARN)，这种方式的好处是一个任务会对应一个job,即每提交一个作业会根据自身的情况，向yarn申请资源，直到作业执行完成，并不会影响下一个作业的正常运行，除非是yarn上面没有任何资源的情况下。</li></ul><p>注意事项:如果是平时的本地测试或者开发，可以采用第一种方案；如果是生产环境推荐使用第二种方案；</p><p>Flink on yarn模式部署时，不需要对Flink做任何修改配置，只需要将其解压传输到各个节点之上。但如果要实现高可用的方案，这个时候就需要到Flink相应的配置修改参数，具体的配置文件是FLINK_HOME/conf/flink-conf.yaml。</p><p>对于Flink on yarn模式，我们并不需要在conf配置下配置 masters和slaves。因为在指定TM的时候可以通过参数“-n”来标识需要启动几个TM;Flink on yarn启动后，如果是在分离式模式你会发现，在所有的节点只会出现一个 YarnSessionClusterEntrypoint进程；如果是客户端模式会出现2个进程一个YarnSessionClusterEntrypoint和一个FlinkYarnSessionCli进程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 客户端模式</span></span><br><span class="line">./bin/yarn-session.sh -n 2 -jm 1024 -tm 1024</span><br><span class="line"></span><br><span class="line">./bin/flink run ./examples/batch/WordCount.jar -input hdfs://192.168.50.63:9000/LICENSE -output hdfs://192.168.50.63:9000/wordcount-result_1.txt</span><br><span class="line"></span><br><span class="line">yarn application --list<span class="comment"># 查看所有yarn容器</span></span><br><span class="line">yarn application -<span class="built_in">kill</span> application_1550836652097_0002<span class="comment"># 删除指定yarn</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分离模式</span></span><br><span class="line">./bin/yarn-session.sh -nm test3 -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># Flink run 方式提交</span></span><br><span class="line">./bin/flink run -m yarn-cluster -yn 1 -yjm 1024 -ytm 1024 ./examples/batch/WordCount.jar</span><br><span class="line"></span><br><span class="line">hdfs dfs -put LICENSE /<span class="comment">#上传文件到hdfs</span></span><br><span class="line"></span><br><span class="line">./bin/flink run -m yarn-cluster -yn 1 -yjm 1024 -ytm 1024  ./examples/batch/WordCount.jar -input hdfs://192.168.50.63:9000/LICENSE -output hdfs://192.168.50.63:9000/wordcount-result.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行到指定的yarn session</span></span><br><span class="line">./bin/flink run -yid application_1550579025929_62420 ./examples/batch/WordCount.jar -input hdfs://data-hadoop-112-16.bjrs.zybang.com:8020/flume/events-.1539684881482 -output hdfs://data-hadoop-112-16.bjrs.zybang.com:8020/flink/flink-test02.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;&lt;font color=&quot;32CD32&quot;&gt;Flink&lt;/font&gt; 是新的stream计算引擎，用java实现。既可以处理stream da
      
    
    </summary>
    
      <category term="大数据" scheme="https://hxqxiaoqi.gitee.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="flink" scheme="https://hxqxiaoqi.gitee.io/tags/flink/"/>
    
  </entry>
  
</feed>
